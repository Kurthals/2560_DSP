
ATMEGA_DSP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017c  00800200  00001b48  00001bdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001b3  0080037c  0080037c  00001d58  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001d58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00001dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a63  00000000  00000000  00002008  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011bb  00000000  00000000  00004a6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001564  00000000  00000000  00005c26  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006b4  00000000  00000000  0000718c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b6d  00000000  00000000  00007840  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001703  00000000  00000000  000083ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000280  00000000  00000000  00009ab0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	85 c2       	rjmp	.+1290   	; 0x50c <__ctors_end>
       2:	00 00       	nop
       4:	a3 c2       	rjmp	.+1350   	; 0x54c <__bad_interrupt>
       6:	00 00       	nop
       8:	a1 c2       	rjmp	.+1346   	; 0x54c <__bad_interrupt>
       a:	00 00       	nop
       c:	9f c2       	rjmp	.+1342   	; 0x54c <__bad_interrupt>
       e:	00 00       	nop
      10:	25 c7       	rjmp	.+3658   	; 0xe5c <__vector_4>
      12:	00 00       	nop
      14:	39 c7       	rjmp	.+3698   	; 0xe88 <__vector_5>
      16:	00 00       	nop
      18:	4d c7       	rjmp	.+3738   	; 0xeb4 <__vector_6>
      1a:	00 00       	nop
      1c:	97 c2       	rjmp	.+1326   	; 0x54c <__bad_interrupt>
      1e:	00 00       	nop
      20:	95 c2       	rjmp	.+1322   	; 0x54c <__bad_interrupt>
      22:	00 00       	nop
      24:	93 c2       	rjmp	.+1318   	; 0x54c <__bad_interrupt>
      26:	00 00       	nop
      28:	91 c2       	rjmp	.+1314   	; 0x54c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8f c2       	rjmp	.+1310   	; 0x54c <__bad_interrupt>
      2e:	00 00       	nop
      30:	8d c2       	rjmp	.+1306   	; 0x54c <__bad_interrupt>
      32:	00 00       	nop
      34:	8b c2       	rjmp	.+1302   	; 0x54c <__bad_interrupt>
      36:	00 00       	nop
      38:	89 c2       	rjmp	.+1298   	; 0x54c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	87 c2       	rjmp	.+1294   	; 0x54c <__bad_interrupt>
      3e:	00 00       	nop
      40:	85 c2       	rjmp	.+1290   	; 0x54c <__bad_interrupt>
      42:	00 00       	nop
      44:	83 c2       	rjmp	.+1286   	; 0x54c <__bad_interrupt>
      46:	00 00       	nop
      48:	81 c2       	rjmp	.+1282   	; 0x54c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7f c2       	rjmp	.+1278   	; 0x54c <__bad_interrupt>
      4e:	00 00       	nop
      50:	7d c2       	rjmp	.+1274   	; 0x54c <__bad_interrupt>
      52:	00 00       	nop
      54:	58 c6       	rjmp	.+3248   	; 0xd06 <__vector_21>
      56:	00 00       	nop
      58:	79 c2       	rjmp	.+1266   	; 0x54c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	77 c2       	rjmp	.+1262   	; 0x54c <__bad_interrupt>
      5e:	00 00       	nop
      60:	75 c2       	rjmp	.+1258   	; 0x54c <__bad_interrupt>
      62:	00 00       	nop
      64:	73 c2       	rjmp	.+1254   	; 0x54c <__bad_interrupt>
      66:	00 00       	nop
      68:	71 c2       	rjmp	.+1250   	; 0x54c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6f c2       	rjmp	.+1246   	; 0x54c <__bad_interrupt>
      6e:	00 00       	nop
      70:	6d c2       	rjmp	.+1242   	; 0x54c <__bad_interrupt>
      72:	00 00       	nop
      74:	86 c6       	rjmp	.+3340   	; 0xd82 <__vector_29>
      76:	00 00       	nop
      78:	69 c2       	rjmp	.+1234   	; 0x54c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	67 c2       	rjmp	.+1230   	; 0x54c <__bad_interrupt>
      7e:	00 00       	nop
      80:	65 c2       	rjmp	.+1226   	; 0x54c <__bad_interrupt>
      82:	00 00       	nop
      84:	63 c2       	rjmp	.+1222   	; 0x54c <__bad_interrupt>
      86:	00 00       	nop
      88:	61 c2       	rjmp	.+1218   	; 0x54c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	5f c2       	rjmp	.+1214   	; 0x54c <__bad_interrupt>
      8e:	00 00       	nop
      90:	5d c2       	rjmp	.+1210   	; 0x54c <__bad_interrupt>
      92:	00 00       	nop
      94:	5b c2       	rjmp	.+1206   	; 0x54c <__bad_interrupt>
      96:	00 00       	nop
      98:	59 c2       	rjmp	.+1202   	; 0x54c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	57 c2       	rjmp	.+1198   	; 0x54c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	55 c2       	rjmp	.+1194   	; 0x54c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	53 c2       	rjmp	.+1190   	; 0x54c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	51 c2       	rjmp	.+1186   	; 0x54c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	4f c2       	rjmp	.+1182   	; 0x54c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	4d c2       	rjmp	.+1178   	; 0x54c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	4b c2       	rjmp	.+1174   	; 0x54c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	49 c2       	rjmp	.+1170   	; 0x54c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	47 c2       	rjmp	.+1166   	; 0x54c <__bad_interrupt>
      be:	00 00       	nop
      c0:	45 c2       	rjmp	.+1162   	; 0x54c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	43 c2       	rjmp	.+1158   	; 0x54c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	41 c2       	rjmp	.+1154   	; 0x54c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	3f c2       	rjmp	.+1150   	; 0x54c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	3d c2       	rjmp	.+1146   	; 0x54c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	3b c2       	rjmp	.+1142   	; 0x54c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	39 c2       	rjmp	.+1138   	; 0x54c <__bad_interrupt>
      da:	00 00       	nop
      dc:	37 c2       	rjmp	.+1134   	; 0x54c <__bad_interrupt>
      de:	00 00       	nop
      e0:	35 c2       	rjmp	.+1130   	; 0x54c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	00 40       	sbci	r16, 0x00	; 0
     114:	7a 10       	cpse	r7, r10
     116:	f3 5a       	subi	r31, 0xA3	; 163
     118:	00 a0       	ldd	r0, Z+32	; 0x20
     11a:	72 4e       	sbci	r23, 0xE2	; 226
     11c:	18 09       	sbc	r17, r8
     11e:	00 10       	cpse	r0, r0
     120:	a5 d4       	rcall	.+2378   	; 0xa6c <computeDFT+0x12c>
     122:	e8 00       	.word	0x00e8	; ????
     124:	00 e8       	ldi	r16, 0x80	; 128
     126:	76 48       	sbci	r23, 0x86	; 134
     128:	17 00       	.word	0x0017	; ????
     12a:	00 e4       	ldi	r16, 0x40	; 64
     12c:	0b 54       	subi	r16, 0x4B	; 75
     12e:	02 00       	.word	0x0002	; ????
     130:	00 ca       	rjmp	.-3072   	; 0xfffff532 <__eeprom_end+0xff7ef532>
     132:	9a 3b       	cpi	r25, 0xBA	; 186
     134:	00 00       	nop
     136:	00 e1       	ldi	r16, 0x10	; 16
     138:	f5 05       	cpc	r31, r5
     13a:	00 00       	nop
     13c:	80 96       	adiw	r24, 0x20	; 32
     13e:	98 00       	.word	0x0098	; ????
     140:	00 00       	nop
     142:	40 42       	sbci	r20, 0x20	; 32
     144:	0f 00       	.word	0x000f	; ????
     146:	00 00       	nop
     148:	a0 86       	std	Z+8, r10	; 0x08
     14a:	01 00       	.word	0x0001	; ????
     14c:	00 00       	nop
     14e:	10 27       	eor	r17, r16
     150:	00 00       	nop
     152:	00 00       	nop
     154:	e8 03       	fmulsu	r22, r16
     156:	00 00       	nop
     158:	00 00       	nop
     15a:	64 00       	.word	0x0064	; ????
     15c:	00 00       	nop
     15e:	00 00       	nop
     160:	0a 00       	.word	0x000a	; ????
     162:	00 00       	nop
     164:	00 00       	nop
     166:	01 00       	.word	0x0001	; ????
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	2c 76       	andi	r18, 0x6C	; 108
     16e:	d8 88       	ldd	r13, Y+16	; 0x10
     170:	dc 67       	ori	r29, 0x7C	; 124
     172:	4f 08       	sbc	r4, r15
     174:	23 df       	rcall	.-442    	; 0xffffffbc <__eeprom_end+0xff7effbc>
     176:	c1 df       	rcall	.-126    	; 0xfa <__SREG__+0xbb>
     178:	ae 59       	subi	r26, 0x9E	; 158
     17a:	e1 b1       	in	r30, 0x01	; 1
     17c:	b7 96       	adiw	r30, 0x27	; 39
     17e:	e5 e3       	ldi	r30, 0x35	; 53
     180:	e4 53       	subi	r30, 0x34	; 52
     182:	c6 3a       	cpi	r28, 0xA6	; 166
     184:	e6 51       	subi	r30, 0x16	; 22
     186:	99 76       	andi	r25, 0x69	; 105
     188:	96 e8       	ldi	r25, 0x86	; 134
     18a:	e6 c2       	rjmp	.+1484   	; 0x758 <detectPhase+0x4e>
     18c:	84 26       	eor	r8, r20
     18e:	eb 89       	ldd	r30, Y+19	; 0x13
     190:	8c 9b       	sbis	0x11, 4	; 17
     192:	62 ed       	ldi	r22, 0xD2	; 210
     194:	40 7c       	andi	r20, 0xC0	; 192
     196:	6f fc       	.word	0xfc6f	; ????
     198:	ef bc       	out	0x2f, r14	; 47
     19a:	9c 9f       	mul	r25, r28
     19c:	40 f2       	brcs	.-112    	; 0x12e <__trampolines_end+0x1c>
     19e:	ba a5       	ldd	r27, Y+42	; 0x2a
     1a0:	6f a5       	ldd	r22, Y+47	; 0x2f
     1a2:	f4 90       	lpm	r15, Z
     1a4:	05 5a       	subi	r16, 0xA5	; 165
     1a6:	2a f7       	brpl	.-54     	; 0x172 <__trampolines_end+0x60>
     1a8:	5c 93       	st	X, r21
     1aa:	6b 6c       	ori	r22, 0xCB	; 203
     1ac:	f9 67       	ori	r31, 0x79	; 121
     1ae:	6d c1       	rjmp	.+730    	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
     1b0:	1b fc       	.word	0xfc1b	; ????
     1b2:	e0 e4       	ldi	r30, 0x40	; 64
     1b4:	0d 47       	sbci	r16, 0x7D	; 125
     1b6:	fe f5       	brtc	.+126    	; 0x236 <myFont+0x2a>
     1b8:	20 e6       	ldi	r18, 0x60	; 96
     1ba:	b5 00       	.word	0x00b5	; ????
     1bc:	d0 ed       	ldi	r29, 0xD0	; 208
     1be:	90 2e       	mov	r9, r16
     1c0:	03 00       	.word	0x0003	; ????
     1c2:	94 35       	cpi	r25, 0x54	; 84
     1c4:	77 05       	cpc	r23, r7
     1c6:	00 80       	ld	r0, Z
     1c8:	84 1e       	adc	r8, r20
     1ca:	08 00       	.word	0x0008	; ????
     1cc:	00 20       	and	r0, r0
     1ce:	4e 0a       	sbc	r4, r30
     1d0:	00 00       	nop
     1d2:	00 c8       	rjmp	.-4096   	; 0xfffff1d4 <__eeprom_end+0xff7ef1d4>
     1d4:	0c 33       	cpi	r16, 0x3C	; 60
     1d6:	33 33       	cpi	r19, 0x33	; 51
     1d8:	33 0f       	add	r19, r19
     1da:	98 6e       	ori	r25, 0xE8	; 232
     1dc:	12 83       	std	Z+2, r17	; 0x02
     1de:	11 41       	sbci	r17, 0x11	; 17
     1e0:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1e2:	21 14       	cp	r2, r1
     1e4:	89 3b       	cpi	r24, 0xB9	; 185
     1e6:	e6 55       	subi	r30, 0x56	; 86
     1e8:	16 cf       	rjmp	.-468    	; 0x16 <__FUSE_REGION_LENGTH__+0x13>
     1ea:	fe e6       	ldi	r31, 0x6E	; 110
     1ec:	db 18       	sub	r13, r11
     1ee:	d1 84       	ldd	r13, Z+9	; 0x09
     1f0:	4b 38       	cpi	r20, 0x8B	; 139
     1f2:	1b f7       	brvc	.-58     	; 0x1ba <__trampolines_end+0xa8>
     1f4:	7c 1d       	adc	r23, r12
     1f6:	90 1d       	adc	r25, r0
     1f8:	a4 bb       	out	0x14, r26	; 20
     1fa:	e4 24       	eor	r14, r4
     1fc:	20 32       	cpi	r18, 0x20	; 32
     1fe:	84 72       	andi	r24, 0x24	; 36
     200:	5e 22       	and	r5, r30
     202:	81 00       	.word	0x0081	; ????
     204:	c9 f1       	breq	.+114    	; 0x278 <myFont+0x6c>
     206:	24 ec       	ldi	r18, 0xC4	; 196
     208:	a1 e5       	ldi	r26, 0x51	; 81
     20a:	3d 27       	eor	r19, r29

0000020c <myFont>:
	...
     214:	00 00 5f 00 00 00 00 00 00 00 07 00 07 00 00 00     .._.............
     224:	00 14 7f 14 7f 14 00 00 00 24 2a 7f 2a 12 00 00     .........$*.*...
     234:	00 23 13 08 64 62 00 00 00 36 49 55 22 50 00 00     .#..db...6IU"P..
     244:	00 00 05 03 00 00 00 00 00 1c 22 41 00 00 00 00     .........."A....
     254:	00 41 22 1c 00 00 00 00 00 08 2a 1c 2a 08 00 00     .A".......*.*...
     264:	00 08 08 3e 08 08 00 00 00 a0 60 00 00 00 00 00     ...>......`.....
     274:	00 08 08 08 08 08 00 00 00 60 60 00 00 00 00 00     .........``.....
     284:	00 20 10 08 04 02 00 00 00 3e 51 49 45 3e 00 00     . .......>QIE>..
     294:	00 00 42 7f 40 00 00 00 00 62 51 49 49 46 00 00     ..B.@....bQIIF..
     2a4:	00 22 41 49 49 36 00 00 00 18 14 12 7f 10 00 00     ."AII6..........
     2b4:	00 27 45 45 45 39 00 00 00 3c 4a 49 49 30 00 00     .'EEE9...<JII0..
     2c4:	00 01 71 09 05 03 00 00 00 36 49 49 49 36 00 00     ..q......6III6..
     2d4:	00 06 49 49 29 1e 00 00 00 00 36 36 00 00 00 00     ..II).....66....
     2e4:	00 00 ac 6c 00 00 00 00 00 08 14 22 41 00 00 00     ...l......."A...
     2f4:	00 14 14 14 14 14 00 00 00 41 22 14 08 00 00 00     .........A".....
     304:	00 02 01 51 09 06 00 00 00 32 49 79 41 3e 00 00     ...Q.....2IyA>..
     314:	00 7e 09 09 09 7e 00 00 00 7f 49 49 49 36 00 00     .~...~....III6..
     324:	00 3e 41 41 41 22 00 00 00 7f 41 41 22 1c 00 00     .>AAA"....AA"...
     334:	00 7f 49 49 49 41 00 00 00 7f 09 09 09 01 00 00     ..IIIA..........
     344:	00 3e 41 41 51 72 00 00 00 7f 08 08 08 7f 00 00     .>AAQr..........
     354:	00 41 7f 41 00 00 00 00 00 20 40 41 3f 01 00 00     .A.A..... @A?...
     364:	00 7f 08 14 22 41 00 00 00 7f 40 40 40 40 00 00     ...."A....@@@@..
     374:	00 7f 02 0c 02 7f 00 00 00 7f 04 08 10 7f 00 00     ................
     384:	00 3e 41 41 41 3e 00 00 00 7f 09 09 09 06 00 00     .>AAA>..........
     394:	00 3e 41 51 21 5e 00 00 00 7f 09 19 29 46 00 00     .>AQ!^......)F..
     3a4:	00 26 49 49 49 32 00 00 00 01 01 7f 01 01 00 00     .&III2..........
     3b4:	00 3f 40 40 40 3f 00 00 00 1f 20 40 20 1f 00 00     .?@@@?.... @ ...
     3c4:	00 3f 40 38 40 3f 00 00 00 63 14 08 14 63 00 00     .?@8@?...c...c..
     3d4:	00 03 04 78 04 03 00 00 00 61 51 49 45 43 00 00     ...x.....aQIEC..
     3e4:	00 7f 41 41 00 00 00 00 00 02 04 08 10 20 00 00     ..AA......... ..
     3f4:	00 41 41 7f 00 00 00 00 00 04 02 01 02 04 00 00     .AA.............
     404:	00 80 80 80 80 80 00 00 00 01 02 04 00 00 00 00     ................
     414:	00 20 54 54 54 78 00 00 00 7f 48 44 44 38 00 00     . TTTx....HDD8..
     424:	00 38 44 44 28 00 00 00 00 38 44 44 48 7f 00 00     .8DD(....8DDH...
     434:	00 38 54 54 54 18 00 00 00 08 7e 09 02 00 00 00     .8TTT.....~.....
     444:	00 18 a4 a4 a4 7c 00 00 00 7f 08 04 04 78 00 00     .....|.......x..
     454:	00 00 7d 00 00 00 00 00 00 80 84 7d 00 00 00 00     ..}........}....
     464:	00 7f 10 28 44 00 00 00 00 41 7f 40 00 00 00 00     ...(D....A.@....
     474:	00 7c 04 18 04 78 00 00 00 7c 08 04 7c 00 00 00     .|...x...|..|...
     484:	00 38 44 44 38 00 00 00 00 fc 24 24 18 00 00 00     .8DD8.....$$....
     494:	00 18 24 24 fc 00 00 00 00 00 7c 08 04 00 00 00     ..$$......|.....
     4a4:	00 48 54 54 24 00 00 00 00 04 7f 44 00 00 00 00     .HTT$......D....
     4b4:	00 3c 40 40 7c 00 00 00 00 1c 20 40 20 1c 00 00     .<@@|..... @ ...
     4c4:	00 3c 40 30 40 3c 00 00 00 44 28 10 28 44 00 00     .<@0@<...D(.(D..
     4d4:	00 1c a0 a0 7c 00 00 00 00 44 64 54 4c 44 00 00     ....|....DdTLD..
     4e4:	00 08 36 41 00 00 00 00 00 00 7f 00 00 00 00 00     ..6A............
     4f4:	00 41 36 08 00 00 00 00 00 02 01 01 02 01 00 00     .A6.............
     504:	00 02 05 05 02 00 00 00                             ........

0000050c <__ctors_end>:
     50c:	11 24       	eor	r1, r1
     50e:	1f be       	out	0x3f, r1	; 63
     510:	cf ef       	ldi	r28, 0xFF	; 255
     512:	d1 e2       	ldi	r29, 0x21	; 33
     514:	de bf       	out	0x3e, r29	; 62
     516:	cd bf       	out	0x3d, r28	; 61
     518:	00 e0       	ldi	r16, 0x00	; 0
     51a:	0c bf       	out	0x3c, r16	; 60

0000051c <__do_copy_data>:
     51c:	13 e0       	ldi	r17, 0x03	; 3
     51e:	a0 e0       	ldi	r26, 0x00	; 0
     520:	b2 e0       	ldi	r27, 0x02	; 2
     522:	e8 e4       	ldi	r30, 0x48	; 72
     524:	fb e1       	ldi	r31, 0x1B	; 27
     526:	00 e0       	ldi	r16, 0x00	; 0
     528:	0b bf       	out	0x3b, r16	; 59
     52a:	02 c0       	rjmp	.+4      	; 0x530 <__do_copy_data+0x14>
     52c:	07 90       	elpm	r0, Z+
     52e:	0d 92       	st	X+, r0
     530:	ac 37       	cpi	r26, 0x7C	; 124
     532:	b1 07       	cpc	r27, r17
     534:	d9 f7       	brne	.-10     	; 0x52c <__do_copy_data+0x10>

00000536 <__do_clear_bss>:
     536:	25 e0       	ldi	r18, 0x05	; 5
     538:	ac e7       	ldi	r26, 0x7C	; 124
     53a:	b3 e0       	ldi	r27, 0x03	; 3
     53c:	01 c0       	rjmp	.+2      	; 0x540 <.do_clear_bss_start>

0000053e <.do_clear_bss_loop>:
     53e:	1d 92       	st	X+, r1

00000540 <.do_clear_bss_start>:
     540:	af 32       	cpi	r26, 0x2F	; 47
     542:	b2 07       	cpc	r27, r18
     544:	e1 f7       	brne	.-8      	; 0x53e <.do_clear_bss_loop>
     546:	90 d3       	rcall	.+1824   	; 0xc68 <main>
     548:	0c 94 a2 0d 	jmp	0x1b44	; 0x1b44 <_exit>

0000054c <__bad_interrupt>:
     54c:	59 cd       	rjmp	.-1358   	; 0x0 <__vectors>

0000054e <init_adc>:
}
*/

//Init ADC 8kHz from timer 0 (with interrupt if entered)
void init_adc(char interrupt){
	ADCSRA |= (1<<ADPS2);						//1MHz input clock to ADC (div factor 16). NB: Only for resolutions less than 10bit
     54e:	ea e7       	ldi	r30, 0x7A	; 122
     550:	f0 e0       	ldi	r31, 0x00	; 0
     552:	90 81       	ld	r25, Z
     554:	94 60       	ori	r25, 0x04	; 4
     556:	90 83       	st	Z, r25
//	ADMUX  |= (1<<REFS0);						//3,3 V reference with cap at VREF pin.
	ADMUX  |= (1<<ADLAR);						//Left adjustment for 8bit resolution
     558:	ac e7       	ldi	r26, 0x7C	; 124
     55a:	b0 e0       	ldi	r27, 0x00	; 0
     55c:	9c 91       	ld	r25, X
     55e:	90 62       	ori	r25, 0x20	; 32
     560:	9c 93       	st	X, r25
	DIDR0  |= (1<<ADC0D);						//disabling unused inputs to save power
     562:	ae e7       	ldi	r26, 0x7E	; 126
     564:	b0 e0       	ldi	r27, 0x00	; 0
     566:	9c 91       	ld	r25, X
     568:	91 60       	ori	r25, 0x01	; 1
     56a:	9c 93       	st	X, r25
	ADCSRB |= (1<<ADTS1) | (1<<ADTS0);			//Auto Trigger source: (Timer/Counter0 Compare Match A)
     56c:	ab e7       	ldi	r26, 0x7B	; 123
     56e:	b0 e0       	ldi	r27, 0x00	; 0
     570:	9c 91       	ld	r25, X
     572:	93 60       	ori	r25, 0x03	; 3
     574:	9c 93       	st	X, r25
	ADCSRA |= (1<<ADATE);						//Enable auto trigger mode
     576:	90 81       	ld	r25, Z
     578:	90 62       	ori	r25, 0x20	; 32
     57a:	90 83       	st	Z, r25
	ADCSRA |= (1<<ADEN);						//Enable ADC
     57c:	90 81       	ld	r25, Z
     57e:	90 68       	ori	r25, 0x80	; 128
     580:	90 83       	st	Z, r25
	if(interrupt) ADCSRA |= (1<<ADIE);			//Enable interrupt
     582:	88 23       	and	r24, r24
     584:	19 f0       	breq	.+6      	; 0x58c <init_adc+0x3e>
     586:	80 81       	ld	r24, Z
     588:	88 60       	ori	r24, 0x08	; 8
     58a:	80 83       	st	Z, r24
     58c:	08 95       	ret

0000058e <I2C_Init>:
     58e:	81 b1       	in	r24, 0x01	; 1
     590:	81 60       	ori	r24, 0x01	; 1
     592:	81 b9       	out	0x01, r24	; 1
     594:	82 b1       	in	r24, 0x02	; 2
     596:	81 60       	ori	r24, 0x01	; 1
     598:	82 b9       	out	0x02, r24	; 2
     59a:	2f ef       	ldi	r18, 0xFF	; 255
     59c:	83 ed       	ldi	r24, 0xD3	; 211
     59e:	90 e3       	ldi	r25, 0x30	; 48
     5a0:	21 50       	subi	r18, 0x01	; 1
     5a2:	80 40       	sbci	r24, 0x00	; 0
     5a4:	90 40       	sbci	r25, 0x00	; 0
     5a6:	e1 f7       	brne	.-8      	; 0x5a0 <I2C_Init+0x12>
     5a8:	00 c0       	rjmp	.+0      	; 0x5aa <I2C_Init+0x1c>
     5aa:	00 00       	nop
     5ac:	82 e1       	ldi	r24, 0x12	; 18
     5ae:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
     5b2:	e9 eb       	ldi	r30, 0xB9	; 185
     5b4:	f0 e0       	ldi	r31, 0x00	; 0
     5b6:	80 81       	ld	r24, Z
     5b8:	8c 7f       	andi	r24, 0xFC	; 252
     5ba:	80 83       	st	Z, r24
     5bc:	85 e0       	ldi	r24, 0x05	; 5
     5be:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     5c2:	08 95       	ret

000005c4 <I2C_Start>:
     5c4:	94 ea       	ldi	r25, 0xA4	; 164
     5c6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     5ca:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     5ce:	99 23       	and	r25, r25
     5d0:	e4 f7       	brge	.-8      	; 0x5ca <I2C_Start+0x6>
     5d2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     5d6:	98 7f       	andi	r25, 0xF8	; 248
     5d8:	98 30       	cpi	r25, 0x08	; 8
     5da:	91 f4       	brne	.+36     	; 0x600 <I2C_Start+0x3c>
     5dc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     5e0:	84 e8       	ldi	r24, 0x84	; 132
     5e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     5e6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     5ea:	88 23       	and	r24, r24
     5ec:	e4 f7       	brge	.-8      	; 0x5e6 <I2C_Start+0x22>
     5ee:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     5f2:	88 7f       	andi	r24, 0xF8	; 248
     5f4:	88 31       	cpi	r24, 0x18	; 24
     5f6:	31 f0       	breq	.+12     	; 0x604 <I2C_Start+0x40>
     5f8:	80 32       	cpi	r24, 0x20	; 32
     5fa:	31 f4       	brne	.+12     	; 0x608 <I2C_Start+0x44>
     5fc:	82 e0       	ldi	r24, 0x02	; 2
     5fe:	08 95       	ret
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	08 95       	ret
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	08 95       	ret
     608:	83 e0       	ldi	r24, 0x03	; 3
     60a:	08 95       	ret

0000060c <I2C_Write>:
     60c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     610:	84 e8       	ldi	r24, 0x84	; 132
     612:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     616:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     61a:	88 23       	and	r24, r24
     61c:	e4 f7       	brge	.-8      	; 0x616 <I2C_Write+0xa>
     61e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     622:	88 7f       	andi	r24, 0xF8	; 248
     624:	88 32       	cpi	r24, 0x28	; 40
     626:	21 f0       	breq	.+8      	; 0x630 <I2C_Write+0x24>
     628:	80 33       	cpi	r24, 0x30	; 48
     62a:	21 f4       	brne	.+8      	; 0x634 <I2C_Write+0x28>
     62c:	81 e0       	ldi	r24, 0x01	; 1
     62e:	08 95       	ret
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	08 95       	ret
     634:	82 e0       	ldi	r24, 0x02	; 2
     636:	08 95       	ret

00000638 <I2C_Stop>:
     638:	84 e9       	ldi	r24, 0x94	; 148
     63a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     63e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     642:	84 fd       	sbrc	r24, 4
     644:	fc cf       	rjmp	.-8      	; 0x63e <I2C_Stop+0x6>
     646:	08 95       	ret

00000648 <nextState>:
 }
 
 
  //Set next state in state machine
  void nextState(char input){
	  tilstand = input;
     648:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <tilstand>
     64c:	08 95       	ret

0000064e <init_trigonometry>:
 // DFT
 // ================================================
 
 //Pre-load Trigonometric values into buffers:
 void init_trigonometry(){
	 for(int i = 0; i<NUM_SAMPLES; i++){
     64e:	20 e0       	ldi	r18, 0x00	; 0
     650:	30 e0       	ldi	r19, 0x00	; 0
     652:	56 c0       	rjmp	.+172    	; 0x700 <init_trigonometry+0xb2>
		switch(trig_count){
     654:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <trig_count>
     658:	81 30       	cpi	r24, 0x01	; 1
     65a:	c9 f0       	breq	.+50     	; 0x68e <init_trigonometry+0x40>
     65c:	28 f0       	brcs	.+10     	; 0x668 <init_trigonometry+0x1a>
     65e:	82 30       	cpi	r24, 0x02	; 2
     660:	49 f1       	breq	.+82     	; 0x6b4 <init_trigonometry+0x66>
     662:	83 30       	cpi	r24, 0x03	; 3
     664:	d1 f1       	breq	.+116    	; 0x6da <init_trigonometry+0x8c>
     666:	4a c0       	rjmp	.+148    	; 0x6fc <init_trigonometry+0xae>
			case 0:
			ReTrig[i]=1;
     668:	a9 01       	movw	r20, r18
     66a:	44 0f       	add	r20, r20
     66c:	55 1f       	adc	r21, r21
     66e:	fa 01       	movw	r30, r20
     670:	ed 56       	subi	r30, 0x6D	; 109
     672:	fb 4f       	sbci	r31, 0xFB	; 251
     674:	61 e0       	ldi	r22, 0x01	; 1
     676:	70 e0       	ldi	r23, 0x00	; 0
     678:	71 83       	std	Z+1, r23	; 0x01
     67a:	60 83       	st	Z, r22
			ImTrig[i]=0;
     67c:	fa 01       	movw	r30, r20
     67e:	ed 5e       	subi	r30, 0xED	; 237
     680:	fb 4f       	sbci	r31, 0xFB	; 251
     682:	11 82       	std	Z+1, r1	; 0x01
     684:	10 82       	st	Z, r1
			trig_count++;
     686:	8f 5f       	subi	r24, 0xFF	; 255
     688:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <trig_count>
			break;
     68c:	37 c0       	rjmp	.+110    	; 0x6fc <init_trigonometry+0xae>
			 		 
			case 1:
			ReTrig[i]=0;
     68e:	a9 01       	movw	r20, r18
     690:	44 0f       	add	r20, r20
     692:	55 1f       	adc	r21, r21
     694:	fa 01       	movw	r30, r20
     696:	ed 56       	subi	r30, 0x6D	; 109
     698:	fb 4f       	sbci	r31, 0xFB	; 251
     69a:	11 82       	std	Z+1, r1	; 0x01
     69c:	10 82       	st	Z, r1
			ImTrig[i]=1;
     69e:	fa 01       	movw	r30, r20
     6a0:	ed 5e       	subi	r30, 0xED	; 237
     6a2:	fb 4f       	sbci	r31, 0xFB	; 251
     6a4:	61 e0       	ldi	r22, 0x01	; 1
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	71 83       	std	Z+1, r23	; 0x01
     6aa:	60 83       	st	Z, r22
			trig_count++;
     6ac:	8f 5f       	subi	r24, 0xFF	; 255
     6ae:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <trig_count>
			break;
     6b2:	24 c0       	rjmp	.+72     	; 0x6fc <init_trigonometry+0xae>
			 		 
			case 2:
			ReTrig[i]=-1;
     6b4:	a9 01       	movw	r20, r18
     6b6:	44 0f       	add	r20, r20
     6b8:	55 1f       	adc	r21, r21
     6ba:	fa 01       	movw	r30, r20
     6bc:	ed 56       	subi	r30, 0x6D	; 109
     6be:	fb 4f       	sbci	r31, 0xFB	; 251
     6c0:	6f ef       	ldi	r22, 0xFF	; 255
     6c2:	7f ef       	ldi	r23, 0xFF	; 255
     6c4:	71 83       	std	Z+1, r23	; 0x01
     6c6:	60 83       	st	Z, r22
			ImTrig[i]=0;
     6c8:	fa 01       	movw	r30, r20
     6ca:	ed 5e       	subi	r30, 0xED	; 237
     6cc:	fb 4f       	sbci	r31, 0xFB	; 251
     6ce:	11 82       	std	Z+1, r1	; 0x01
     6d0:	10 82       	st	Z, r1
			trig_count++;
     6d2:	8f 5f       	subi	r24, 0xFF	; 255
     6d4:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <trig_count>
			break;
     6d8:	11 c0       	rjmp	.+34     	; 0x6fc <init_trigonometry+0xae>
			 		 
			case 3:
			ReTrig[i]=0;
     6da:	c9 01       	movw	r24, r18
     6dc:	88 0f       	add	r24, r24
     6de:	99 1f       	adc	r25, r25
     6e0:	fc 01       	movw	r30, r24
     6e2:	ed 56       	subi	r30, 0x6D	; 109
     6e4:	fb 4f       	sbci	r31, 0xFB	; 251
     6e6:	11 82       	std	Z+1, r1	; 0x01
     6e8:	10 82       	st	Z, r1
			ImTrig[i]=-1;
     6ea:	fc 01       	movw	r30, r24
     6ec:	ed 5e       	subi	r30, 0xED	; 237
     6ee:	fb 4f       	sbci	r31, 0xFB	; 251
     6f0:	4f ef       	ldi	r20, 0xFF	; 255
     6f2:	5f ef       	ldi	r21, 0xFF	; 255
     6f4:	51 83       	std	Z+1, r21	; 0x01
     6f6:	40 83       	st	Z, r20
			trig_count = 0;
     6f8:	10 92 0a 04 	sts	0x040A, r1	; 0x80040a <trig_count>
 // DFT
 // ================================================
 
 //Pre-load Trigonometric values into buffers:
 void init_trigonometry(){
	 for(int i = 0; i<NUM_SAMPLES; i++){
     6fc:	2f 5f       	subi	r18, 0xFF	; 255
     6fe:	3f 4f       	sbci	r19, 0xFF	; 255
     700:	20 34       	cpi	r18, 0x40	; 64
     702:	31 05       	cpc	r19, r1
     704:	0c f4       	brge	.+2      	; 0x708 <init_trigonometry+0xba>
     706:	a6 cf       	rjmp	.-180    	; 0x654 <init_trigonometry+0x6>
			ImTrig[i]=-1;
			trig_count = 0;
			break;
		}
	 }
 }
     708:	08 95       	ret

0000070a <detectPhase>:


// ================================================
// Main functionality
// ================================================
char detectPhase(){
     70a:	4f 92       	push	r4
     70c:	5f 92       	push	r5
     70e:	6f 92       	push	r6
     710:	7f 92       	push	r7
     712:	8f 92       	push	r8
     714:	9f 92       	push	r9
     716:	af 92       	push	r10
     718:	bf 92       	push	r11
     71a:	df 92       	push	r13
     71c:	ef 92       	push	r14
     71e:	ff 92       	push	r15
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
	
	//Check if signal amplitude is above threshold
	if(modulus>AMP_THRESHOLD){
     728:	60 91 01 04 	lds	r22, 0x0401	; 0x800401 <modulus>
     72c:	70 91 02 04 	lds	r23, 0x0402	; 0x800402 <modulus+0x1>
     730:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <modulus+0x2>
     734:	90 91 04 04 	lds	r25, 0x0404	; 0x800404 <modulus+0x3>
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	40 e8       	ldi	r20, 0x80	; 128
     73e:	5f e3       	ldi	r21, 0x3F	; 63
     740:	ca d6       	rcall	.+3476   	; 0x14d6 <__gesf2>
     742:	18 16       	cp	r1, r24
     744:	0c f0       	brlt	.+2      	; 0x748 <detectPhase+0x3e>
     746:	50 c0       	rjmp	.+160    	; 0x7e8 <detectPhase+0xde>
		//Detect material from phase
		char result[2] = {0};
     748:	e1 2c       	mov	r14, r1
     74a:	d1 2c       	mov	r13, r1
		char hits = 0;
		for(int i = 0; i<NUM_MATERIALS; i++){
     74c:	00 e0       	ldi	r16, 0x00	; 0
     74e:	10 e0       	ldi	r17, 0x00	; 0
     750:	46 c0       	rjmp	.+140    	; 0x7de <detectPhase+0xd4>
			hits = 0;
			for(int j = 0; j<NUM_MATERIAL_SAMPLES; j++){
				if(materials[i][j] < (angle+MATERIAL_DEVIATION) && materials[i][j] > (angle-MATERIAL_DEVIATION)){
     752:	84 e1       	ldi	r24, 0x14	; 20
     754:	80 9f       	mul	r24, r16
     756:	f0 01       	movw	r30, r0
     758:	81 9f       	mul	r24, r17
     75a:	f0 0d       	add	r31, r0
     75c:	11 24       	eor	r1, r1
     75e:	ec 0f       	add	r30, r28
     760:	fd 1f       	adc	r31, r29
     762:	ee 0f       	add	r30, r30
     764:	ff 1f       	adc	r31, r31
     766:	ee 0f       	add	r30, r30
     768:	ff 1f       	adc	r31, r31
     76a:	e0 50       	subi	r30, 0x00	; 0
     76c:	fe 4f       	sbci	r31, 0xFE	; 254
     76e:	80 80       	ld	r8, Z
     770:	91 80       	ldd	r9, Z+1	; 0x01
     772:	a2 80       	ldd	r10, Z+2	; 0x02
     774:	b3 80       	ldd	r11, Z+3	; 0x03
     776:	40 90 05 04 	lds	r4, 0x0405	; 0x800405 <angle>
     77a:	50 90 06 04 	lds	r5, 0x0406	; 0x800406 <angle+0x1>
     77e:	60 90 07 04 	lds	r6, 0x0407	; 0x800407 <angle+0x2>
     782:	70 90 08 04 	lds	r7, 0x0408	; 0x800408 <angle+0x3>
     786:	20 e0       	ldi	r18, 0x00	; 0
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	40 e0       	ldi	r20, 0x00	; 0
     78c:	50 e4       	ldi	r21, 0x40	; 64
     78e:	c3 01       	movw	r24, r6
     790:	b2 01       	movw	r22, r4
     792:	9a d4       	rcall	.+2356   	; 0x10c8 <__addsf3>
     794:	9b 01       	movw	r18, r22
     796:	ac 01       	movw	r20, r24
     798:	c5 01       	movw	r24, r10
     79a:	b4 01       	movw	r22, r8
     79c:	5b d5       	rcall	.+2742   	; 0x1254 <__cmpsf2>
     79e:	88 23       	and	r24, r24
     7a0:	7c f4       	brge	.+30     	; 0x7c0 <detectPhase+0xb6>
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	40 e0       	ldi	r20, 0x00	; 0
     7a8:	50 e4       	ldi	r21, 0x40	; 64
     7aa:	c3 01       	movw	r24, r6
     7ac:	b2 01       	movw	r22, r4
     7ae:	8b d4       	rcall	.+2326   	; 0x10c6 <__subsf3>
     7b0:	9b 01       	movw	r18, r22
     7b2:	ac 01       	movw	r20, r24
     7b4:	c5 01       	movw	r24, r10
     7b6:	b4 01       	movw	r22, r8
     7b8:	8e d6       	rcall	.+3356   	; 0x14d6 <__gesf2>
     7ba:	18 16       	cp	r1, r24
     7bc:	0c f4       	brge	.+2      	; 0x7c0 <detectPhase+0xb6>
					hits ++; 
     7be:	f3 94       	inc	r15
				}
				if(hits>result[0]){
     7c0:	ef 14       	cp	r14, r15
     7c2:	10 f4       	brcc	.+4      	; 0x7c8 <detectPhase+0xbe>
					 result[0]=hits;
     7c4:	ef 2c       	mov	r14, r15
					 result[1]=i;	//Save material with most hits
     7c6:	d0 2e       	mov	r13, r16
		//Detect material from phase
		char result[2] = {0};
		char hits = 0;
		for(int i = 0; i<NUM_MATERIALS; i++){
			hits = 0;
			for(int j = 0; j<NUM_MATERIAL_SAMPLES; j++){
     7c8:	21 96       	adiw	r28, 0x01	; 1
     7ca:	03 c0       	rjmp	.+6      	; 0x7d2 <detectPhase+0xc8>
     7cc:	c0 e0       	ldi	r28, 0x00	; 0
     7ce:	d0 e0       	ldi	r29, 0x00	; 0
     7d0:	f1 2c       	mov	r15, r1
     7d2:	c4 31       	cpi	r28, 0x14	; 20
     7d4:	d1 05       	cpc	r29, r1
     7d6:	0c f4       	brge	.+2      	; 0x7da <detectPhase+0xd0>
     7d8:	bc cf       	rjmp	.-136    	; 0x752 <detectPhase+0x48>
	//Check if signal amplitude is above threshold
	if(modulus>AMP_THRESHOLD){
		//Detect material from phase
		char result[2] = {0};
		char hits = 0;
		for(int i = 0; i<NUM_MATERIALS; i++){
     7da:	0f 5f       	subi	r16, 0xFF	; 255
     7dc:	1f 4f       	sbci	r17, 0xFF	; 255
     7de:	04 30       	cpi	r16, 0x04	; 4
     7e0:	11 05       	cpc	r17, r1
     7e2:	a4 f3       	brlt	.-24     	; 0x7cc <detectPhase+0xc2>
					 result[1]=i;	//Save material with most hits
				}
			}
		}
		//Return material with most matched phase "hits"
		return result[1];
     7e4:	8d 2d       	mov	r24, r13
     7e6:	01 c0       	rjmp	.+2      	; 0x7ea <detectPhase+0xe0>
	}
	return 0xFF;
     7e8:	8f ef       	ldi	r24, 0xFF	; 255
}
     7ea:	df 91       	pop	r29
     7ec:	cf 91       	pop	r28
     7ee:	1f 91       	pop	r17
     7f0:	0f 91       	pop	r16
     7f2:	ff 90       	pop	r15
     7f4:	ef 90       	pop	r14
     7f6:	df 90       	pop	r13
     7f8:	bf 90       	pop	r11
     7fa:	af 90       	pop	r10
     7fc:	9f 90       	pop	r9
     7fe:	8f 90       	pop	r8
     800:	7f 90       	pop	r7
     802:	6f 90       	pop	r6
     804:	5f 90       	pop	r5
     806:	4f 90       	pop	r4
     808:	08 95       	ret

0000080a <loadMaterials>:


void loadMaterials(){
	for(int i = 0; i< NUM_MATERIAL_SAMPLES; i++){
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	11 c0       	rjmp	.+34     	; 0x832 <loadMaterials+0x28>
		materials[3][i] = 116; 
     810:	fc 01       	movw	r30, r24
     812:	fc 96       	adiw	r30, 0x3c	; 60
     814:	ee 0f       	add	r30, r30
     816:	ff 1f       	adc	r31, r31
     818:	ee 0f       	add	r30, r30
     81a:	ff 1f       	adc	r31, r31
     81c:	e0 50       	subi	r30, 0x00	; 0
     81e:	fe 4f       	sbci	r31, 0xFE	; 254
     820:	40 e0       	ldi	r20, 0x00	; 0
     822:	50 e0       	ldi	r21, 0x00	; 0
     824:	68 ee       	ldi	r22, 0xE8	; 232
     826:	72 e4       	ldi	r23, 0x42	; 66
     828:	40 83       	st	Z, r20
     82a:	51 83       	std	Z+1, r21	; 0x01
     82c:	62 83       	std	Z+2, r22	; 0x02
     82e:	73 83       	std	Z+3, r23	; 0x03
	return 0xFF;
}


void loadMaterials(){
	for(int i = 0; i< NUM_MATERIAL_SAMPLES; i++){
     830:	01 96       	adiw	r24, 0x01	; 1
     832:	84 31       	cpi	r24, 0x14	; 20
     834:	91 05       	cpc	r25, r1
     836:	64 f3       	brlt	.-40     	; 0x810 <loadMaterials+0x6>
		materials[3][i] = 116; 
	}
}
     838:	08 95       	ret

0000083a <setup>:
// ================================================

 void setup(){
	 
	 //Setup ADC PORT
	 SETBIT(DDRB,6);
     83a:	84 b1       	in	r24, 0x04	; 4
     83c:	80 64       	ori	r24, 0x40	; 64
     83e:	84 b9       	out	0x04, r24	; 4
	 CLRBIT(PORTB,6);
     840:	85 b1       	in	r24, 0x05	; 5
     842:	8f 7b       	andi	r24, 0xBF	; 191
     844:	85 b9       	out	0x05, r24	; 5
	 
	 //Setup PINS for buttons
	 CLRBIT(DDRE,5); //PE5 int5 pin3
     846:	8d b1       	in	r24, 0x0d	; 13
     848:	8f 7d       	andi	r24, 0xDF	; 223
     84a:	8d b9       	out	0x0d, r24	; 13
	 CLRBIT(DDRE,4); //PE4 int4 pin2
     84c:	8d b1       	in	r24, 0x0d	; 13
     84e:	8f 7e       	andi	r24, 0xEF	; 239
     850:	8d b9       	out	0x0d, r24	; 13
	 CLRBIT(DDRD,3); //PD3 int3 pin18
     852:	8a b1       	in	r24, 0x0a	; 10
     854:	87 7f       	andi	r24, 0xF7	; 247
     856:	8a b9       	out	0x0a, r24	; 10
	 //Internal Pull-up on inputs
	 SETBIT(PORTE,5); 
     858:	8e b1       	in	r24, 0x0e	; 14
     85a:	80 62       	ori	r24, 0x20	; 32
     85c:	8e b9       	out	0x0e, r24	; 14
	 SETBIT(PORTE,4);
     85e:	8e b1       	in	r24, 0x0e	; 14
     860:	80 61       	ori	r24, 0x10	; 16
     862:	8e b9       	out	0x0e, r24	; 14
	 SETBIT(PORTD,3);
     864:	8b b1       	in	r24, 0x0b	; 11
     866:	88 60       	ori	r24, 0x08	; 8
     868:	8b b9       	out	0x0b, r24	; 11
	 
	 //Configure falling edge detection on pins:
	 EICRA |= (1<<ISC31);
     86a:	e9 e6       	ldi	r30, 0x69	; 105
     86c:	f0 e0       	ldi	r31, 0x00	; 0
     86e:	80 81       	ld	r24, Z
     870:	80 68       	ori	r24, 0x80	; 128
     872:	80 83       	st	Z, r24
	 EICRB |= (1<<ISC41) | (1<<ISC51) ;	
     874:	ea e6       	ldi	r30, 0x6A	; 106
     876:	f0 e0       	ldi	r31, 0x00	; 0
     878:	80 81       	ld	r24, Z
     87a:	8a 60       	ori	r24, 0x0A	; 10
     87c:	80 83       	st	Z, r24
	 
	 //Enable interrupts with EIMSK:
	 EIMSK |= (1<<INT5) | (1<<INT4) | (1<<INT3);
     87e:	8d b3       	in	r24, 0x1d	; 29
     880:	88 63       	ori	r24, 0x38	; 56
     882:	8d bb       	out	0x1d, r24	; 29
	 
	 //Enable global interrupt
	 sei();
     884:	78 94       	sei
	 
	 //OLED-display
	 _i2c_address = 0X78;
     886:	88 e7       	ldi	r24, 0x78	; 120
     888:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <_i2c_address>
	 I2C_Init();
     88c:	80 de       	rcall	.-768    	; 0x58e <I2C_Init>
	 InitializeDisplay();
     88e:	34 d3       	rcall	.+1640   	; 0xef8 <InitializeDisplay>
	 print_fonts();
     890:	c7 d3       	rcall	.+1934   	; 0x1020 <print_fonts>
     892:	84 d3       	rcall	.+1800   	; 0xf9c <clear_display>
	 clear_display();
     894:	40 e0       	ldi	r20, 0x00	; 0
     896:	50 e0       	ldi	r21, 0x00	; 0
	 sendStrXY("AMP",2,0);
     898:	62 e0       	ldi	r22, 0x02	; 2
     89a:	70 e0       	ldi	r23, 0x00	; 0
     89c:	82 e4       	ldi	r24, 0x42	; 66
     89e:	93 e0       	ldi	r25, 0x03	; 3
     8a0:	91 d3       	rcall	.+1826   	; 0xfc4 <sendStrXY>
     8a2:	40 e0       	ldi	r20, 0x00	; 0
     8a4:	50 e0       	ldi	r21, 0x00	; 0
	 sendStrXY("Angle:",3,0);
     8a6:	63 e0       	ldi	r22, 0x03	; 3
     8a8:	70 e0       	ldi	r23, 0x00	; 0
     8aa:	86 e4       	ldi	r24, 0x46	; 70
     8ac:	93 e0       	ldi	r25, 0x03	; 3
     8ae:	8a d3       	rcall	.+1812   	; 0xfc4 <sendStrXY>
     8b0:	40 e0       	ldi	r20, 0x00	; 0
     8b2:	50 e0       	ldi	r21, 0x00	; 0
	 sendStrXY("Mode:",1,0);
     8b4:	61 e0       	ldi	r22, 0x01	; 1
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	8d e4       	ldi	r24, 0x4D	; 77
     8ba:	93 e0       	ldi	r25, 0x03	; 3
     8bc:	83 d3       	rcall	.+1798   	; 0xfc4 <sendStrXY>
     8be:	40 e0       	ldi	r20, 0x00	; 0
     8c0:	50 e0       	ldi	r21, 0x00	; 0
	 sendStrXY("Material:",5,0);
     8c2:	65 e0       	ldi	r22, 0x05	; 5
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	83 e5       	ldi	r24, 0x53	; 83
     8c8:	93 e0       	ldi	r25, 0x03	; 3
     8ca:	7c d3       	rcall	.+1784   	; 0xfc4 <sendStrXY>
	
	 //init_timer0();
	 init_timer0();
     8cc:	ea d3       	rcall	.+2004   	; 0x10a2 <init_timer0>
     8ce:	bf de       	rcall	.-642    	; 0x64e <init_trigonometry>
	 
	 //Fill Trigonometric array
	 init_trigonometry();
     8d0:	9c cf       	rjmp	.-200    	; 0x80a <loadMaterials>
     8d2:	08 95       	ret

000008d4 <debug_print_char>:
	 
	 loadMaterials();
     8d4:	cf 92       	push	r12
     8d6:	df 92       	push	r13
     8d8:	ef 92       	push	r14

// ================================================
// Utils
// ================================================

void debug_print_char(float input,char x, char y){
     8da:	ff 92       	push	r15
     8dc:	0f 93       	push	r16
     8de:	1f 93       	push	r17
     8e0:	cf 93       	push	r28
     8e2:	df 93       	push	r29
     8e4:	cd b7       	in	r28, 0x3d	; 61
     8e6:	de b7       	in	r29, 0x3e	; 62
     8e8:	c4 56       	subi	r28, 0x64	; 100
     8ea:	d1 09       	sbc	r29, r1
     8ec:	0f b6       	in	r0, 0x3f	; 63
     8ee:	f8 94       	cli
     8f0:	de bf       	out	0x3e, r29	; 62
     8f2:	0f be       	out	0x3f, r0	; 63
     8f4:	cd bf       	out	0x3d, r28	; 61
     8f6:	d4 2e       	mov	r13, r20
     8f8:	c2 2e       	mov	r12, r18
	char temp[100] = {0};
     8fa:	9e 01       	movw	r18, r28
     8fc:	2f 5f       	subi	r18, 0xFF	; 255
     8fe:	3f 4f       	sbci	r19, 0xFF	; 255
     900:	79 01       	movw	r14, r18
     902:	24 e6       	ldi	r18, 0x64	; 100
     904:	f7 01       	movw	r30, r14
     906:	11 92       	st	Z+, r1
     908:	2a 95       	dec	r18
     90a:	e9 f7       	brne	.-6      	; 0x906 <debug_print_char+0x32>
	dtostrf(input,4,2,temp);
     90c:	87 01       	movw	r16, r14
     90e:	22 e0       	ldi	r18, 0x02	; 2
     910:	44 e0       	ldi	r20, 0x04	; 4
     912:	ab d6       	rcall	.+3414   	; 0x166a <dtostrf>
	//sprintf(temp,"%d",input);
	sendStrXY(temp, x,y);
     914:	4c 2d       	mov	r20, r12
     916:	50 e0       	ldi	r21, 0x00	; 0
     918:	6d 2d       	mov	r22, r13
     91a:	70 e0       	ldi	r23, 0x00	; 0
     91c:	c7 01       	movw	r24, r14
     91e:	52 d3       	rcall	.+1700   	; 0xfc4 <sendStrXY>
}
     920:	cc 59       	subi	r28, 0x9C	; 156
     922:	df 4f       	sbci	r29, 0xFF	; 255
     924:	0f b6       	in	r0, 0x3f	; 63
     926:	f8 94       	cli
     928:	de bf       	out	0x3e, r29	; 62
     92a:	0f be       	out	0x3f, r0	; 63
     92c:	cd bf       	out	0x3d, r28	; 61
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	ff 90       	pop	r15
     938:	ef 90       	pop	r14
     93a:	df 90       	pop	r13
     93c:	cf 90       	pop	r12
     93e:	08 95       	ret

00000940 <computeDFT>:
	 }
 }


//Compute DFT for latest sample
 void computeDFT(){
     940:	4f 92       	push	r4
     942:	5f 92       	push	r5
     944:	6f 92       	push	r6
     946:	7f 92       	push	r7
     948:	8f 92       	push	r8
     94a:	9f 92       	push	r9
     94c:	af 92       	push	r10
     94e:	bf 92       	push	r11
     950:	cf 92       	push	r12
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
	 if(DFT_ready == 1){
     95c:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <DFT_ready>
     960:	81 30       	cpi	r24, 0x01	; 1
     962:	09 f0       	breq	.+2      	; 0x966 <computeDFT+0x26>
     964:	72 c1       	rjmp	.+740    	; 0xc4a <computeDFT+0x30a>
     966:	9c c0       	rjmp	.+312    	; 0xaa0 <computeDFT+0x160>
		 
		 for(int i = 0; i<NUM_SAMPLES; i++){
			 Re += ReTrig[i]*(DFTBuffer[!active_write][i]*5)/BIT_DIV;
     968:	fe 01       	movw	r30, r28
     96a:	ee 0f       	add	r30, r30
     96c:	ff 1f       	adc	r31, r31
     96e:	ed 56       	subi	r30, 0x6D	; 109
     970:	fb 4f       	sbci	r31, 0xFB	; 251
     972:	40 81       	ld	r20, Z
     974:	51 81       	ldd	r21, Z+1	; 0x01
     976:	20 91 13 05 	lds	r18, 0x0513	; 0x800513 <active_write>
     97a:	81 e0       	ldi	r24, 0x01	; 1
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	22 23       	and	r18, r18
     980:	11 f0       	breq	.+4      	; 0x986 <computeDFT+0x46>
     982:	80 e0       	ldi	r24, 0x00	; 0
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	fc 01       	movw	r30, r24
     988:	00 24       	eor	r0, r0
     98a:	f6 95       	lsr	r31
     98c:	e7 95       	ror	r30
     98e:	07 94       	ror	r0
     990:	f6 95       	lsr	r31
     992:	e7 95       	ror	r30
     994:	07 94       	ror	r0
     996:	fe 2f       	mov	r31, r30
     998:	e0 2d       	mov	r30, r0
     99a:	ef 57       	subi	r30, 0x7F	; 127
     99c:	fc 4f       	sbci	r31, 0xFC	; 252
     99e:	ec 0f       	add	r30, r28
     9a0:	fd 1f       	adc	r31, r29
     9a2:	80 81       	ld	r24, Z
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	9c 01       	movw	r18, r24
     9a8:	22 0f       	add	r18, r18
     9aa:	33 1f       	adc	r19, r19
     9ac:	22 0f       	add	r18, r18
     9ae:	33 1f       	adc	r19, r19
     9b0:	82 0f       	add	r24, r18
     9b2:	93 1f       	adc	r25, r19
     9b4:	48 9f       	mul	r20, r24
     9b6:	90 01       	movw	r18, r0
     9b8:	49 9f       	mul	r20, r25
     9ba:	30 0d       	add	r19, r0
     9bc:	58 9f       	mul	r21, r24
     9be:	30 0d       	add	r19, r0
     9c0:	11 24       	eor	r1, r1
     9c2:	33 23       	and	r19, r19
     9c4:	14 f4       	brge	.+4      	; 0x9ca <computeDFT+0x8a>
     9c6:	21 50       	subi	r18, 0x01	; 1
     9c8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ca:	63 2f       	mov	r22, r19
     9cc:	73 2f       	mov	r23, r19
     9ce:	77 0f       	add	r23, r23
     9d0:	77 0b       	sbc	r23, r23
     9d2:	07 2e       	mov	r0, r23
     9d4:	00 0c       	add	r0, r0
     9d6:	88 0b       	sbc	r24, r24
     9d8:	99 0b       	sbc	r25, r25
     9da:	a8 d4       	rcall	.+2384   	; 0x132c <__floatsisf>
     9dc:	9b 01       	movw	r18, r22
     9de:	ac 01       	movw	r20, r24
     9e0:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <Re>
     9e4:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <Re+0x1>
     9e8:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <Re+0x2>
     9ec:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <Re+0x3>
     9f0:	6b d3       	rcall	.+1750   	; 0x10c8 <__addsf3>
     9f2:	60 93 0f 04 	sts	0x040F, r22	; 0x80040f <Re>
     9f6:	70 93 10 04 	sts	0x0410, r23	; 0x800410 <Re+0x1>
     9fa:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <Re+0x2>
     9fe:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <Re+0x3>
			 Im += ImTrig[i]*(DFTBuffer[!active_write][i]*5)/BIT_DIV;
     a02:	fe 01       	movw	r30, r28
     a04:	ee 0f       	add	r30, r30
     a06:	ff 1f       	adc	r31, r31
     a08:	ed 5e       	subi	r30, 0xED	; 237
     a0a:	fb 4f       	sbci	r31, 0xFB	; 251
     a0c:	40 81       	ld	r20, Z
     a0e:	51 81       	ldd	r21, Z+1	; 0x01
     a10:	20 91 13 05 	lds	r18, 0x0513	; 0x800513 <active_write>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	22 23       	and	r18, r18
     a1a:	11 f0       	breq	.+4      	; 0xa20 <computeDFT+0xe0>
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	fc 01       	movw	r30, r24
     a22:	00 24       	eor	r0, r0
     a24:	f6 95       	lsr	r31
     a26:	e7 95       	ror	r30
     a28:	07 94       	ror	r0
     a2a:	f6 95       	lsr	r31
     a2c:	e7 95       	ror	r30
     a2e:	07 94       	ror	r0
     a30:	fe 2f       	mov	r31, r30
     a32:	e0 2d       	mov	r30, r0
     a34:	ef 57       	subi	r30, 0x7F	; 127
     a36:	fc 4f       	sbci	r31, 0xFC	; 252
     a38:	ec 0f       	add	r30, r28
     a3a:	fd 1f       	adc	r31, r29
     a3c:	80 81       	ld	r24, Z
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	9c 01       	movw	r18, r24
     a42:	22 0f       	add	r18, r18
     a44:	33 1f       	adc	r19, r19
     a46:	22 0f       	add	r18, r18
     a48:	33 1f       	adc	r19, r19
     a4a:	82 0f       	add	r24, r18
     a4c:	93 1f       	adc	r25, r19
     a4e:	48 9f       	mul	r20, r24
     a50:	90 01       	movw	r18, r0
     a52:	49 9f       	mul	r20, r25
     a54:	30 0d       	add	r19, r0
     a56:	58 9f       	mul	r21, r24
     a58:	30 0d       	add	r19, r0
     a5a:	11 24       	eor	r1, r1
     a5c:	33 23       	and	r19, r19
     a5e:	14 f4       	brge	.+4      	; 0xa64 <computeDFT+0x124>
     a60:	21 50       	subi	r18, 0x01	; 1
     a62:	3f 4f       	sbci	r19, 0xFF	; 255
     a64:	63 2f       	mov	r22, r19
     a66:	73 2f       	mov	r23, r19
     a68:	77 0f       	add	r23, r23
     a6a:	77 0b       	sbc	r23, r23
     a6c:	07 2e       	mov	r0, r23
     a6e:	00 0c       	add	r0, r0
     a70:	88 0b       	sbc	r24, r24
     a72:	99 0b       	sbc	r25, r25
     a74:	5b d4       	rcall	.+2230   	; 0x132c <__floatsisf>
     a76:	9b 01       	movw	r18, r22
     a78:	ac 01       	movw	r20, r24
     a7a:	60 91 0b 04 	lds	r22, 0x040B	; 0x80040b <Im>
     a7e:	70 91 0c 04 	lds	r23, 0x040C	; 0x80040c <Im+0x1>
     a82:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <Im+0x2>
     a86:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <Im+0x3>
     a8a:	1e d3       	rcall	.+1596   	; 0x10c8 <__addsf3>
     a8c:	60 93 0b 04 	sts	0x040B, r22	; 0x80040b <Im>
     a90:	70 93 0c 04 	sts	0x040C, r23	; 0x80040c <Im+0x1>
     a94:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <Im+0x2>
     a98:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <Im+0x3>

//Compute DFT for latest sample
 void computeDFT(){
	 if(DFT_ready == 1){
		 
		 for(int i = 0; i<NUM_SAMPLES; i++){
     a9c:	21 96       	adiw	r28, 0x01	; 1
     a9e:	02 c0       	rjmp	.+4      	; 0xaa4 <computeDFT+0x164>
     aa0:	c0 e0       	ldi	r28, 0x00	; 0
     aa2:	d0 e0       	ldi	r29, 0x00	; 0
     aa4:	c0 34       	cpi	r28, 0x40	; 64
     aa6:	d1 05       	cpc	r29, r1
     aa8:	0c f4       	brge	.+2      	; 0xaac <computeDFT+0x16c>
     aaa:	5e cf       	rjmp	.-324    	; 0x968 <computeDFT+0x28>
			 Re += ReTrig[i]*(DFTBuffer[!active_write][i]*5)/BIT_DIV;
			 Im += ImTrig[i]*(DFTBuffer[!active_write][i]*5)/BIT_DIV;
			 //Im = -Im;
		 }
		 Im = -Im;
     aac:	c0 90 0b 04 	lds	r12, 0x040B	; 0x80040b <Im>
     ab0:	d0 90 0c 04 	lds	r13, 0x040C	; 0x80040c <Im+0x1>
     ab4:	e0 90 0d 04 	lds	r14, 0x040D	; 0x80040d <Im+0x2>
     ab8:	f0 90 0e 04 	lds	r15, 0x040E	; 0x80040e <Im+0x3>
     abc:	f7 fa       	bst	r15, 7
     abe:	f0 94       	com	r15
     ac0:	f7 f8       	bld	r15, 7
     ac2:	f0 94       	com	r15
     ac4:	c0 92 0b 04 	sts	0x040B, r12	; 0x80040b <Im>
     ac8:	d0 92 0c 04 	sts	0x040C, r13	; 0x80040c <Im+0x1>
     acc:	e0 92 0d 04 	sts	0x040D, r14	; 0x80040d <Im+0x2>
     ad0:	f0 92 0e 04 	sts	0x040E, r15	; 0x80040e <Im+0x3>
		 modulus =(0.6*modulus)+(0.4*sqrtf((Im*Im) + (Re*Re))/16);
     ad4:	2a e9       	ldi	r18, 0x9A	; 154
     ad6:	39 e9       	ldi	r19, 0x99	; 153
     ad8:	49 e1       	ldi	r20, 0x19	; 25
     ada:	5f e3       	ldi	r21, 0x3F	; 63
     adc:	60 91 01 04 	lds	r22, 0x0401	; 0x800401 <modulus>
     ae0:	70 91 02 04 	lds	r23, 0x0402	; 0x800402 <modulus+0x1>
     ae4:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <modulus+0x2>
     ae8:	90 91 04 04 	lds	r25, 0x0404	; 0x800404 <modulus+0x3>
     aec:	ff d4       	rcall	.+2558   	; 0x14ec <__mulsf3>
     aee:	4b 01       	movw	r8, r22
     af0:	5c 01       	movw	r10, r24
     af2:	a7 01       	movw	r20, r14
     af4:	96 01       	movw	r18, r12
     af6:	c7 01       	movw	r24, r14
     af8:	b6 01       	movw	r22, r12
     afa:	f8 d4       	rcall	.+2544   	; 0x14ec <__mulsf3>
     afc:	6b 01       	movw	r12, r22
     afe:	7c 01       	movw	r14, r24
     b00:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <Re>
     b04:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <Re+0x1>
     b08:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <Re+0x2>
     b0c:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <Re+0x3>
     b10:	9b 01       	movw	r18, r22
     b12:	ac 01       	movw	r20, r24
     b14:	eb d4       	rcall	.+2518   	; 0x14ec <__mulsf3>
     b16:	2b 01       	movw	r4, r22
     b18:	3c 01       	movw	r6, r24
     b1a:	a3 01       	movw	r20, r6
     b1c:	92 01       	movw	r18, r4
     b1e:	c7 01       	movw	r24, r14
     b20:	b6 01       	movw	r22, r12
     b22:	d2 d2       	rcall	.+1444   	; 0x10c8 <__addsf3>
     b24:	4a d5       	rcall	.+2708   	; 0x15ba <sqrt>
     b26:	2d ec       	ldi	r18, 0xCD	; 205
     b28:	3c ec       	ldi	r19, 0xCC	; 204
     b2a:	4c ec       	ldi	r20, 0xCC	; 204
     b2c:	5e e3       	ldi	r21, 0x3E	; 62
     b2e:	de d4       	rcall	.+2492   	; 0x14ec <__mulsf3>
     b30:	20 e0       	ldi	r18, 0x00	; 0
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	40 e8       	ldi	r20, 0x80	; 128
     b36:	5d e3       	ldi	r21, 0x3D	; 61
     b38:	d9 d4       	rcall	.+2482   	; 0x14ec <__mulsf3>
     b3a:	9b 01       	movw	r18, r22
     b3c:	ac 01       	movw	r20, r24
     b3e:	c5 01       	movw	r24, r10
     b40:	b4 01       	movw	r22, r8
     b42:	c2 d2       	rcall	.+1412   	; 0x10c8 <__addsf3>
     b44:	60 93 01 04 	sts	0x0401, r22	; 0x800401 <modulus>
     b48:	70 93 02 04 	sts	0x0402, r23	; 0x800402 <modulus+0x1>
     b4c:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <modulus+0x2>
     b50:	90 93 04 04 	sts	0x0404, r25	; 0x800404 <modulus+0x3>
		 debug_print_char(modulus,2,7);
     b54:	27 e0       	ldi	r18, 0x07	; 7
     b56:	42 e0       	ldi	r20, 0x02	; 2
     b58:	bd de       	rcall	.-646    	; 0x8d4 <debug_print_char>
		
		 if(Im == 0 && Re == 0){
     b5a:	c0 90 0b 04 	lds	r12, 0x040B	; 0x80040b <Im>
     b5e:	d0 90 0c 04 	lds	r13, 0x040C	; 0x80040c <Im+0x1>
     b62:	e0 90 0d 04 	lds	r14, 0x040D	; 0x80040d <Im+0x2>
     b66:	f0 90 0e 04 	lds	r15, 0x040E	; 0x80040e <Im+0x3>
     b6a:	20 e0       	ldi	r18, 0x00	; 0
     b6c:	30 e0       	ldi	r19, 0x00	; 0
     b6e:	a9 01       	movw	r20, r18
     b70:	c7 01       	movw	r24, r14
     b72:	b6 01       	movw	r22, r12
     b74:	6f d3       	rcall	.+1758   	; 0x1254 <__cmpsf2>
     b76:	81 11       	cpse	r24, r1
     b78:	17 c0       	rjmp	.+46     	; 0xba8 <computeDFT+0x268>
     b7a:	60 91 0f 04 	lds	r22, 0x040F	; 0x80040f <Re>
     b7e:	70 91 10 04 	lds	r23, 0x0410	; 0x800410 <Re+0x1>
     b82:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <Re+0x2>
     b86:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <Re+0x3>
     b8a:	20 e0       	ldi	r18, 0x00	; 0
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	a9 01       	movw	r20, r18
     b90:	61 d3       	rcall	.+1730   	; 0x1254 <__cmpsf2>
     b92:	81 11       	cpse	r24, r1
     b94:	09 c0       	rjmp	.+18     	; 0xba8 <computeDFT+0x268>
			 angle = 0;
     b96:	10 92 05 04 	sts	0x0405, r1	; 0x800405 <angle>
     b9a:	10 92 06 04 	sts	0x0406, r1	; 0x800406 <angle+0x1>
     b9e:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <angle+0x2>
     ba2:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <angle+0x3>
		 }
		 else{
		     angle = (0.6*angle)+((0.4*(180/M_PI)*atan2((double)Im, (double)Re)));
     ba6:	2c c0       	rjmp	.+88     	; 0xc00 <computeDFT+0x2c0>
     ba8:	2a e9       	ldi	r18, 0x9A	; 154
     baa:	39 e9       	ldi	r19, 0x99	; 153
     bac:	49 e1       	ldi	r20, 0x19	; 25
     bae:	5f e3       	ldi	r21, 0x3F	; 63
     bb0:	60 91 05 04 	lds	r22, 0x0405	; 0x800405 <angle>
     bb4:	70 91 06 04 	lds	r23, 0x0406	; 0x800406 <angle+0x1>
     bb8:	80 91 07 04 	lds	r24, 0x0407	; 0x800407 <angle+0x2>
     bbc:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <angle+0x3>
     bc0:	95 d4       	rcall	.+2346   	; 0x14ec <__mulsf3>
     bc2:	4b 01       	movw	r8, r22
     bc4:	5c 01       	movw	r10, r24
     bc6:	20 91 0f 04 	lds	r18, 0x040F	; 0x80040f <Re>
     bca:	30 91 10 04 	lds	r19, 0x0410	; 0x800410 <Re+0x1>
     bce:	40 91 11 04 	lds	r20, 0x0411	; 0x800411 <Re+0x2>
     bd2:	50 91 12 04 	lds	r21, 0x0412	; 0x800412 <Re+0x3>
     bd6:	c7 01       	movw	r24, r14
     bd8:	b6 01       	movw	r22, r12
     bda:	e9 d2       	rcall	.+1490   	; 0x11ae <atan2>
     bdc:	23 eb       	ldi	r18, 0xB3	; 179
     bde:	38 e5       	ldi	r19, 0x58	; 88
     be0:	47 eb       	ldi	r20, 0xB7	; 183
     be2:	51 e4       	ldi	r21, 0x41	; 65
     be4:	83 d4       	rcall	.+2310   	; 0x14ec <__mulsf3>
     be6:	9b 01       	movw	r18, r22
     be8:	ac 01       	movw	r20, r24
     bea:	c5 01       	movw	r24, r10
     bec:	b4 01       	movw	r22, r8
     bee:	6c d2       	rcall	.+1240   	; 0x10c8 <__addsf3>
     bf0:	60 93 05 04 	sts	0x0405, r22	; 0x800405 <angle>
     bf4:	70 93 06 04 	sts	0x0406, r23	; 0x800406 <angle+0x1>
     bf8:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <angle+0x2>
     bfc:	90 93 08 04 	sts	0x0408, r25	; 0x800408 <angle+0x3>
// 		 if(anglebufcnt == AVERAGE_NUM){
// 			 anglebufcnt = 0;
// 		 }
// 		 
		 
		 debug_print_char(angle,3,7);
     c00:	60 91 05 04 	lds	r22, 0x0405	; 0x800405 <angle>
     c04:	70 91 06 04 	lds	r23, 0x0406	; 0x800406 <angle+0x1>
     c08:	80 91 07 04 	lds	r24, 0x0407	; 0x800407 <angle+0x2>
     c0c:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <angle+0x3>
     c10:	27 e0       	ldi	r18, 0x07	; 7
     c12:	43 e0       	ldi	r20, 0x03	; 3
     c14:	5f de       	rcall	.-834    	; 0x8d4 <debug_print_char>
		 Re = 0;
     c16:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <Re>
     c1a:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <Re+0x1>
     c1e:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <Re+0x2>
     c22:	10 92 12 04 	sts	0x0412, r1	; 0x800412 <Re+0x3>
		 Im = 0;
     c26:	10 92 0b 04 	sts	0x040B, r1	; 0x80040b <Im>
     c2a:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <Im+0x1>
     c2e:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <Im+0x2>
     c32:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <Im+0x3>
		 anglemean = 0;
     c36:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <__data_end>
     c3a:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <__data_end+0x1>
     c3e:	10 92 7e 03 	sts	0x037E, r1	; 0x80037e <__data_end+0x2>
     c42:	10 92 7f 03 	sts	0x037F, r1	; 0x80037f <__data_end+0x3>
		 DFT_ready = 0;
     c46:	10 92 09 04 	sts	0x0409, r1	; 0x800409 <DFT_ready>
	 }
 }
     c4a:	df 91       	pop	r29
     c4c:	cf 91       	pop	r28
     c4e:	ff 90       	pop	r15
     c50:	ef 90       	pop	r14
     c52:	df 90       	pop	r13
     c54:	cf 90       	pop	r12
     c56:	bf 90       	pop	r11
     c58:	af 90       	pop	r10
     c5a:	9f 90       	pop	r9
     c5c:	8f 90       	pop	r8
     c5e:	7f 90       	pop	r7
     c60:	6f 90       	pop	r6
     c62:	5f 90       	pop	r5
     c64:	4f 90       	pop	r4
     c66:	08 95       	ret

00000c68 <main>:
	};



 int main(void){
	setup();
     c68:	e8 dd       	rcall	.-1072   	; 0x83a <setup>
	
//Main loop	
	while(1){
		switch(tilstand){
     c6a:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <tilstand>
     c6e:	81 30       	cpi	r24, 0x01	; 1
     c70:	41 f0       	breq	.+16     	; 0xc82 <main+0x1a>
     c72:	08 f4       	brcc	.+2      	; 0xc76 <main+0xe>
     c74:	45 c0       	rjmp	.+138    	; 0xd00 <main+0x98>
     c76:	82 30       	cpi	r24, 0x02	; 2
     c78:	79 f1       	breq	.+94     	; 0xcd8 <main+0x70>
     c7a:	83 30       	cpi	r24, 0x03	; 3
     c7c:	09 f4       	brne	.+2      	; 0xc80 <main+0x18>
     c7e:	36 c0       	rjmp	.+108    	; 0xcec <main+0x84>
     c80:	f4 cf       	rjmp	.-24     	; 0xc6a <main+0x2>
			
			case run:
				sendStrXY("Running  ",1,7);
     c82:	47 e0       	ldi	r20, 0x07	; 7
     c84:	50 e0       	ldi	r21, 0x00	; 0
     c86:	61 e0       	ldi	r22, 0x01	; 1
     c88:	70 e0       	ldi	r23, 0x00	; 0
     c8a:	8d e5       	ldi	r24, 0x5D	; 93
     c8c:	93 e0       	ldi	r25, 0x03	; 3
				computeDFT();
     c8e:	9a d1       	rcall	.+820    	; 0xfc4 <sendStrXY>
     c90:	57 de       	rcall	.-850    	; 0x940 <computeDFT>
				if(detectPhase()==3){
     c92:	3b dd       	rcall	.-1418   	; 0x70a <detectPhase>
     c94:	83 30       	cpi	r24, 0x03	; 3
     c96:	39 f4       	brne	.+14     	; 0xca6 <main+0x3e>
     c98:	40 e0       	ldi	r20, 0x00	; 0
					 sendStrXY("Alu",6,0);
     c9a:	50 e0       	ldi	r21, 0x00	; 0
     c9c:	66 e0       	ldi	r22, 0x06	; 6
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	87 e6       	ldi	r24, 0x67	; 103
     ca2:	93 e0       	ldi	r25, 0x03	; 3
     ca4:	8f d1       	rcall	.+798    	; 0xfc4 <sendStrXY>
     ca6:	80 91 2d 05 	lds	r24, 0x052D	; 0x80052d <BTN3_flag>
				}
				
				
				if(BTN3_flag == 1){
     caa:	81 30       	cpi	r24, 0x01	; 1
     cac:	21 f4       	brne	.+8      	; 0xcb6 <main+0x4e>
 					nextState(calibrate);
     cae:	82 e0       	ldi	r24, 0x02	; 2
     cb0:	cb dc       	rcall	.-1642   	; 0x648 <nextState>
     cb2:	10 92 2d 05 	sts	0x052D, r1	; 0x80052d <BTN3_flag>
 					BTN3_flag = 0;
				}
				if(BTN4_flag ==1){
     cb6:	80 91 2c 05 	lds	r24, 0x052C	; 0x80052c <BTN4_flag>
     cba:	81 30       	cpi	r24, 0x01	; 1
     cbc:	21 f4       	brne	.+8      	; 0xcc6 <main+0x5e>
					nextState(store);
     cbe:	83 e0       	ldi	r24, 0x03	; 3
     cc0:	c3 dc       	rcall	.-1658   	; 0x648 <nextState>
     cc2:	10 92 2c 05 	sts	0x052C, r1	; 0x80052c <BTN4_flag>
					BTN4_flag = 0;
				}
				if(BTN5_flag == 1){
     cc6:	80 91 2e 05 	lds	r24, 0x052E	; 0x80052e <BTN5_flag>
     cca:	81 30       	cpi	r24, 0x01	; 1
     ccc:	71 f6       	brne	.-100    	; 0xc6a <main+0x2>
					nextState(reset);
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	bb dc       	rcall	.-1674   	; 0x648 <nextState>
     cd2:	10 92 2e 05 	sts	0x052E, r1	; 0x80052e <BTN5_flag>
					BTN5_flag =0;
     cd6:	c9 cf       	rjmp	.-110    	; 0xc6a <main+0x2>
				}
				
			break;	
			
			case calibrate:
				sendStrXY("Calibrate",1,7);
     cd8:	47 e0       	ldi	r20, 0x07	; 7
     cda:	50 e0       	ldi	r21, 0x00	; 0
     cdc:	61 e0       	ldi	r22, 0x01	; 1
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	8b e6       	ldi	r24, 0x6B	; 107
     ce2:	93 e0       	ldi	r25, 0x03	; 3
     ce4:	6f d1       	rcall	.+734    	; 0xfc4 <sendStrXY>
				nextState(run);
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	af dc       	rcall	.-1698   	; 0x648 <nextState>
			
			break; 
     cea:	bf cf       	rjmp	.-130    	; 0xc6a <main+0x2>
			
			case store:
				sendStrXY("Store",1,7);
     cec:	47 e0       	ldi	r20, 0x07	; 7
     cee:	50 e0       	ldi	r21, 0x00	; 0
     cf0:	61 e0       	ldi	r22, 0x01	; 1
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	85 e7       	ldi	r24, 0x75	; 117
     cf6:	93 e0       	ldi	r25, 0x03	; 3
     cf8:	65 d1       	rcall	.+714    	; 0xfc4 <sendStrXY>
				nextState(run);
     cfa:	81 e0       	ldi	r24, 0x01	; 1
     cfc:	a5 dc       	rcall	.-1718   	; 0x648 <nextState>
     cfe:	b5 cf       	rjmp	.-150    	; 0xc6a <main+0x2>
				
			break;
     d00:	81 e0       	ldi	r24, 0x01	; 1
			
			case reset:
				nextState(run);
     d02:	a2 dc       	rcall	.-1724   	; 0x648 <nextState>
     d04:	b2 cf       	rjmp	.-156    	; 0xc6a <main+0x2>

00000d06 <__vector_21>:
     d06:	1f 92       	push	r1
			
			break; 
     d08:	0f 92       	push	r0
// ================================================
// Service Routines
// ================================================

//Service routine for Timer1 Compare B
ISR(TIMER0_COMPA_vect){
     d0a:	0f b6       	in	r0, 0x3f	; 63
     d0c:	0f 92       	push	r0
     d0e:	11 24       	eor	r1, r1
     d10:	0b b6       	in	r0, 0x3b	; 59
     d12:	0f 92       	push	r0
     d14:	2f 93       	push	r18
     d16:	3f 93       	push	r19
     d18:	4f 93       	push	r20
     d1a:	5f 93       	push	r21
     d1c:	6f 93       	push	r22
     d1e:	7f 93       	push	r23
     d20:	8f 93       	push	r24
     d22:	9f 93       	push	r25
     d24:	af 93       	push	r26
     d26:	bf 93       	push	r27
     d28:	ef 93       	push	r30
     d2a:	ff 93       	push	r31
//	TOGGLEBIT(PORTB,5);
 	if(timercount != 1){
     d2c:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <timercount>
     d30:	81 30       	cpi	r24, 0x01	; 1
     d32:	21 f0       	breq	.+8      	; 0xd3c <__vector_21+0x36>
 		timercount++;		
     d34:	8f 5f       	subi	r24, 0xFF	; 255
     d36:	80 93 17 05 	sts	0x0517, r24	; 0x800517 <timercount>
     d3a:	10 c0       	rjmp	.+32     	; 0xd5c <__vector_21+0x56>
 	}
 	else{
 		timercount = 0;
     d3c:	10 92 17 05 	sts	0x0517, r1	; 0x800517 <timercount>
 		TOGGLEBIT(PORTB,6);	
     d40:	95 b1       	in	r25, 0x05	; 5
     d42:	80 e4       	ldi	r24, 0x40	; 64
     d44:	89 27       	eor	r24, r25
     d46:	85 b9       	out	0x05, r24	; 5
		//Start ADC sampling
		if(CHKBIT(PORTB,6) == 0 && ADC_start_flag == 0){
     d48:	2e 99       	sbic	0x05, 6	; 5
     d4a:	08 c0       	rjmp	.+16     	; 0xd5c <__vector_21+0x56>
     d4c:	80 91 16 05 	lds	r24, 0x0516	; 0x800516 <ADC_start_flag>
     d50:	81 11       	cpse	r24, r1
     d52:	04 c0       	rjmp	.+8      	; 0xd5c <__vector_21+0x56>
			ADC_start_flag = 1;
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	80 93 16 05 	sts	0x0516, r24	; 0x800516 <ADC_start_flag>
			init_adc(1);
     d5a:	f9 db       	rcall	.-2062   	; 0x54e <init_adc>
			}
		}
}
     d5c:	ff 91       	pop	r31
     d5e:	ef 91       	pop	r30
     d60:	bf 91       	pop	r27
     d62:	af 91       	pop	r26
     d64:	9f 91       	pop	r25
     d66:	8f 91       	pop	r24
     d68:	7f 91       	pop	r23
     d6a:	6f 91       	pop	r22
     d6c:	5f 91       	pop	r21
     d6e:	4f 91       	pop	r20
     d70:	3f 91       	pop	r19
     d72:	2f 91       	pop	r18
     d74:	0f 90       	pop	r0
     d76:	0b be       	out	0x3b, r0	; 59
     d78:	0f 90       	pop	r0
     d7a:	0f be       	out	0x3f, r0	; 63
     d7c:	0f 90       	pop	r0
     d7e:	1f 90       	pop	r1
     d80:	18 95       	reti

00000d82 <__vector_29>:



//Service routine for ADC sample ready
ISR(ADC_vect){
     d82:	1f 92       	push	r1
     d84:	0f 92       	push	r0
     d86:	0f b6       	in	r0, 0x3f	; 63
     d88:	0f 92       	push	r0
     d8a:	11 24       	eor	r1, r1
     d8c:	0b b6       	in	r0, 0x3b	; 59
     d8e:	0f 92       	push	r0
     d90:	2f 93       	push	r18
     d92:	3f 93       	push	r19
     d94:	8f 93       	push	r24
     d96:	9f 93       	push	r25
     d98:	ef 93       	push	r30
     d9a:	ff 93       	push	r31
	if(buffercounter < NUM_SAMPLES){
     d9c:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <buffercounter>
     da0:	90 91 15 05 	lds	r25, 0x0515	; 0x800515 <buffercounter+0x1>
     da4:	80 34       	cpi	r24, 0x40	; 64
     da6:	91 05       	cpc	r25, r1
     da8:	9c f4       	brge	.+38     	; 0xdd0 <__vector_29+0x4e>
		DFTBuffer[active_write][buffercounter] = ADCH;
     daa:	e0 91 13 05 	lds	r30, 0x0513	; 0x800513 <active_write>
     dae:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     db2:	30 e4       	ldi	r19, 0x40	; 64
     db4:	e3 9f       	mul	r30, r19
     db6:	f0 01       	movw	r30, r0
     db8:	11 24       	eor	r1, r1
     dba:	ef 57       	subi	r30, 0x7F	; 127
     dbc:	fc 4f       	sbci	r31, 0xFC	; 252
     dbe:	e8 0f       	add	r30, r24
     dc0:	f9 1f       	adc	r31, r25
     dc2:	20 83       	st	Z, r18
		buffercounter++;
     dc4:	01 96       	adiw	r24, 0x01	; 1
     dc6:	90 93 15 05 	sts	0x0515, r25	; 0x800515 <buffercounter+0x1>
     dca:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <buffercounter>
     dce:	39 c0       	rjmp	.+114    	; 0xe42 <__vector_29+0xc0>
	}
	else if(DFT_ready){
     dd0:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <DFT_ready>
     dd4:	88 23       	and	r24, r24
     dd6:	b1 f0       	breq	.+44     	; 0xe04 <__vector_29+0x82>
		buffercounter = 0;
     dd8:	10 92 15 05 	sts	0x0515, r1	; 0x800515 <buffercounter+0x1>
     ddc:	10 92 14 05 	sts	0x0514, r1	; 0x800514 <buffercounter>
		DFTBuffer[active_write][buffercounter] = ADCH; 
     de0:	e0 91 13 05 	lds	r30, 0x0513	; 0x800513 <active_write>
     de4:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     de8:	90 e4       	ldi	r25, 0x40	; 64
     dea:	e9 9f       	mul	r30, r25
     dec:	f0 01       	movw	r30, r0
     dee:	11 24       	eor	r1, r1
     df0:	ef 57       	subi	r30, 0x7F	; 127
     df2:	fc 4f       	sbci	r31, 0xFC	; 252
     df4:	80 83       	st	Z, r24
		buffercounter++;
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	90 93 15 05 	sts	0x0515, r25	; 0x800515 <buffercounter+0x1>
     dfe:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <buffercounter>
     e02:	1f c0       	rjmp	.+62     	; 0xe42 <__vector_29+0xc0>
	}
	else{
		active_write = !active_write;
     e04:	90 91 13 05 	lds	r25, 0x0513	; 0x800513 <active_write>
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	91 11       	cpse	r25, r1
     e0c:	80 e0       	ldi	r24, 0x00	; 0
     e0e:	80 93 13 05 	sts	0x0513, r24	; 0x800513 <active_write>
		DFT_ready = 1;
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <DFT_ready>
		buffercounter = 0;
     e18:	10 92 15 05 	sts	0x0515, r1	; 0x800515 <buffercounter+0x1>
     e1c:	10 92 14 05 	sts	0x0514, r1	; 0x800514 <buffercounter>
		DFTBuffer[active_write][buffercounter] = ADCH;	//Save remaining first sample 
     e20:	e0 91 13 05 	lds	r30, 0x0513	; 0x800513 <active_write>
     e24:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     e28:	30 e4       	ldi	r19, 0x40	; 64
     e2a:	e3 9f       	mul	r30, r19
     e2c:	f0 01       	movw	r30, r0
     e2e:	11 24       	eor	r1, r1
     e30:	ef 57       	subi	r30, 0x7F	; 127
     e32:	fc 4f       	sbci	r31, 0xFC	; 252
     e34:	80 83       	st	Z, r24
		buffercounter++;  
     e36:	81 e0       	ldi	r24, 0x01	; 1
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	90 93 15 05 	sts	0x0515, r25	; 0x800515 <buffercounter+0x1>
     e3e:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <buffercounter>
	}
}
     e42:	ff 91       	pop	r31
     e44:	ef 91       	pop	r30
     e46:	9f 91       	pop	r25
     e48:	8f 91       	pop	r24
     e4a:	3f 91       	pop	r19
     e4c:	2f 91       	pop	r18
     e4e:	0f 90       	pop	r0
     e50:	0b be       	out	0x3b, r0	; 59
     e52:	0f 90       	pop	r0
     e54:	0f be       	out	0x3f, r0	; 63
     e56:	0f 90       	pop	r0
     e58:	1f 90       	pop	r1
     e5a:	18 95       	reti

00000e5c <__vector_4>:


//Service routines for external interrupts (buttons)
ISR(INT3_vect){
     e5c:	1f 92       	push	r1
     e5e:	0f 92       	push	r0
     e60:	0f b6       	in	r0, 0x3f	; 63
     e62:	0f 92       	push	r0
     e64:	11 24       	eor	r1, r1
     e66:	8f 93       	push	r24
	if(init_flag == 1){
     e68:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <init_flag>
     e6c:	81 30       	cpi	r24, 0x01	; 1
     e6e:	19 f4       	brne	.+6      	; 0xe76 <__vector_4+0x1a>
		init_flag = 0;
     e70:	10 92 80 03 	sts	0x0380, r1	; 0x800380 <init_flag>
     e74:	03 c0       	rjmp	.+6      	; 0xe7c <__vector_4+0x20>
	}
	else{
	BTN3_flag = 1;
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	80 93 2d 05 	sts	0x052D, r24	; 0x80052d <BTN3_flag>
	}
}
     e7c:	8f 91       	pop	r24
     e7e:	0f 90       	pop	r0
     e80:	0f be       	out	0x3f, r0	; 63
     e82:	0f 90       	pop	r0
     e84:	1f 90       	pop	r1
     e86:	18 95       	reti

00000e88 <__vector_5>:

ISR(INT4_vect){
     e88:	1f 92       	push	r1
     e8a:	0f 92       	push	r0
     e8c:	0f b6       	in	r0, 0x3f	; 63
     e8e:	0f 92       	push	r0
     e90:	11 24       	eor	r1, r1
     e92:	8f 93       	push	r24
	if(init_flag == 1){
     e94:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <init_flag>
     e98:	81 30       	cpi	r24, 0x01	; 1
     e9a:	19 f4       	brne	.+6      	; 0xea2 <__vector_5+0x1a>
		init_flag = 0;
     e9c:	10 92 80 03 	sts	0x0380, r1	; 0x800380 <init_flag>
     ea0:	03 c0       	rjmp	.+6      	; 0xea8 <__vector_5+0x20>
	}
	else{
		BTN4_flag = 1;
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	80 93 2c 05 	sts	0x052C, r24	; 0x80052c <BTN4_flag>
	}
}
     ea8:	8f 91       	pop	r24
     eaa:	0f 90       	pop	r0
     eac:	0f be       	out	0x3f, r0	; 63
     eae:	0f 90       	pop	r0
     eb0:	1f 90       	pop	r1
     eb2:	18 95       	reti

00000eb4 <__vector_6>:

ISR(INT5_vect){
     eb4:	1f 92       	push	r1
     eb6:	0f 92       	push	r0
     eb8:	0f b6       	in	r0, 0x3f	; 63
     eba:	0f 92       	push	r0
     ebc:	11 24       	eor	r1, r1
     ebe:	8f 93       	push	r24
	if(init_flag == 1){
     ec0:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <init_flag>
     ec4:	81 30       	cpi	r24, 0x01	; 1
     ec6:	19 f4       	brne	.+6      	; 0xece <__vector_6+0x1a>
		init_flag = 0;
     ec8:	10 92 80 03 	sts	0x0380, r1	; 0x800380 <init_flag>
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <__vector_6+0x20>
	}
	else{
		BTN5_flag = 1;
     ece:	81 e0       	ldi	r24, 0x01	; 1
     ed0:	80 93 2e 05 	sts	0x052E, r24	; 0x80052e <BTN5_flag>
	}
     ed4:	8f 91       	pop	r24
     ed6:	0f 90       	pop	r0
     ed8:	0f be       	out	0x3f, r0	; 63
     eda:	0f 90       	pop	r0
     edc:	1f 90       	pop	r1
     ede:	18 95       	reti

00000ee0 <ssd1306_command>:
     ee0:	cf 93       	push	r28
     ee2:	c8 2f       	mov	r28, r24
     ee4:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <_i2c_address>
     ee8:	6d db       	rcall	.-2342   	; 0x5c4 <I2C_Start>
     eea:	80 e0       	ldi	r24, 0x00	; 0
     eec:	8f db       	rcall	.-2274   	; 0x60c <I2C_Write>
     eee:	8c 2f       	mov	r24, r28
     ef0:	8d db       	rcall	.-2278   	; 0x60c <I2C_Write>
     ef2:	a2 db       	rcall	.-2236   	; 0x638 <I2C_Stop>
     ef4:	cf 91       	pop	r28
     ef6:	08 95       	ret

00000ef8 <InitializeDisplay>:
     ef8:	8e ea       	ldi	r24, 0xAE	; 174
     efa:	f2 df       	rcall	.-28     	; 0xee0 <ssd1306_command>
     efc:	85 ed       	ldi	r24, 0xD5	; 213
     efe:	f0 df       	rcall	.-32     	; 0xee0 <ssd1306_command>
     f00:	80 e8       	ldi	r24, 0x80	; 128
     f02:	ee df       	rcall	.-36     	; 0xee0 <ssd1306_command>
     f04:	88 ea       	ldi	r24, 0xA8	; 168
     f06:	ec df       	rcall	.-40     	; 0xee0 <ssd1306_command>
     f08:	8f e3       	ldi	r24, 0x3F	; 63
     f0a:	ea df       	rcall	.-44     	; 0xee0 <ssd1306_command>
     f0c:	83 ed       	ldi	r24, 0xD3	; 211
     f0e:	e8 df       	rcall	.-48     	; 0xee0 <ssd1306_command>
     f10:	80 e0       	ldi	r24, 0x00	; 0
     f12:	e6 df       	rcall	.-52     	; 0xee0 <ssd1306_command>
     f14:	80 e4       	ldi	r24, 0x40	; 64
     f16:	e4 df       	rcall	.-56     	; 0xee0 <ssd1306_command>
     f18:	8d e8       	ldi	r24, 0x8D	; 141
     f1a:	e2 df       	rcall	.-60     	; 0xee0 <ssd1306_command>
     f1c:	84 e1       	ldi	r24, 0x14	; 20
     f1e:	e0 df       	rcall	.-64     	; 0xee0 <ssd1306_command>
     f20:	80 e2       	ldi	r24, 0x20	; 32
     f22:	de df       	rcall	.-68     	; 0xee0 <ssd1306_command>
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	dc df       	rcall	.-72     	; 0xee0 <ssd1306_command>
     f28:	81 ea       	ldi	r24, 0xA1	; 161
     f2a:	da df       	rcall	.-76     	; 0xee0 <ssd1306_command>
     f2c:	88 ec       	ldi	r24, 0xC8	; 200
     f2e:	d8 df       	rcall	.-80     	; 0xee0 <ssd1306_command>
     f30:	8a ed       	ldi	r24, 0xDA	; 218
     f32:	d6 df       	rcall	.-84     	; 0xee0 <ssd1306_command>
     f34:	82 e1       	ldi	r24, 0x12	; 18
     f36:	d4 df       	rcall	.-88     	; 0xee0 <ssd1306_command>
     f38:	81 e8       	ldi	r24, 0x81	; 129
     f3a:	d2 df       	rcall	.-92     	; 0xee0 <ssd1306_command>
     f3c:	8f ec       	ldi	r24, 0xCF	; 207
     f3e:	d0 df       	rcall	.-96     	; 0xee0 <ssd1306_command>
     f40:	89 ed       	ldi	r24, 0xD9	; 217
     f42:	ce df       	rcall	.-100    	; 0xee0 <ssd1306_command>
     f44:	81 ef       	ldi	r24, 0xF1	; 241
     f46:	cc df       	rcall	.-104    	; 0xee0 <ssd1306_command>
     f48:	8b ed       	ldi	r24, 0xDB	; 219
     f4a:	ca df       	rcall	.-108    	; 0xee0 <ssd1306_command>
     f4c:	80 e4       	ldi	r24, 0x40	; 64
     f4e:	c8 df       	rcall	.-112    	; 0xee0 <ssd1306_command>
     f50:	84 ea       	ldi	r24, 0xA4	; 164
     f52:	c6 df       	rcall	.-116    	; 0xee0 <ssd1306_command>
     f54:	86 ea       	ldi	r24, 0xA6	; 166
     f56:	c4 df       	rcall	.-120    	; 0xee0 <ssd1306_command>
     f58:	8f ea       	ldi	r24, 0xAF	; 175
     f5a:	c2 cf       	rjmp	.-124    	; 0xee0 <ssd1306_command>
     f5c:	08 95       	ret

00000f5e <SendChar>:
     f5e:	cf 93       	push	r28
     f60:	c8 2f       	mov	r28, r24
     f62:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <_i2c_address>
     f66:	2e db       	rcall	.-2468   	; 0x5c4 <I2C_Start>
     f68:	80 e4       	ldi	r24, 0x40	; 64
     f6a:	50 db       	rcall	.-2400   	; 0x60c <I2C_Write>
     f6c:	8c 2f       	mov	r24, r28
     f6e:	4e db       	rcall	.-2404   	; 0x60c <I2C_Write>
     f70:	63 db       	rcall	.-2362   	; 0x638 <I2C_Stop>
     f72:	cf 91       	pop	r28
     f74:	08 95       	ret

00000f76 <setXY>:
     f76:	cf 93       	push	r28
     f78:	c6 2f       	mov	r28, r22
     f7a:	80 55       	subi	r24, 0x50	; 80
     f7c:	b1 df       	rcall	.-158    	; 0xee0 <ssd1306_command>
     f7e:	8c 2f       	mov	r24, r28
     f80:	88 0f       	add	r24, r24
     f82:	88 0f       	add	r24, r24
     f84:	88 0f       	add	r24, r24
     f86:	88 70       	andi	r24, 0x08	; 8
     f88:	ab df       	rcall	.-170    	; 0xee0 <ssd1306_command>
     f8a:	8c 2f       	mov	r24, r28
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	96 95       	lsr	r25
     f90:	87 95       	ror	r24
     f92:	8f 70       	andi	r24, 0x0F	; 15
     f94:	80 5f       	subi	r24, 0xF0	; 240
     f96:	a4 df       	rcall	.-184    	; 0xee0 <ssd1306_command>
     f98:	cf 91       	pop	r28
     f9a:	08 95       	ret

00000f9c <clear_display>:
     f9c:	cf 93       	push	r28
     f9e:	df 93       	push	r29
     fa0:	d0 e0       	ldi	r29, 0x00	; 0
     fa2:	0b c0       	rjmp	.+22     	; 0xfba <clear_display+0x1e>
     fa4:	60 e0       	ldi	r22, 0x00	; 0
     fa6:	8d 2f       	mov	r24, r29
     fa8:	e6 df       	rcall	.-52     	; 0xf76 <setXY>
     faa:	c0 e0       	ldi	r28, 0x00	; 0
     fac:	03 c0       	rjmp	.+6      	; 0xfb4 <clear_display+0x18>
     fae:	80 e0       	ldi	r24, 0x00	; 0
     fb0:	d6 df       	rcall	.-84     	; 0xf5e <SendChar>
     fb2:	cf 5f       	subi	r28, 0xFF	; 255
     fb4:	cc 23       	and	r28, r28
     fb6:	dc f7       	brge	.-10     	; 0xfae <clear_display+0x12>
     fb8:	df 5f       	subi	r29, 0xFF	; 255
     fba:	d8 30       	cpi	r29, 0x08	; 8
     fbc:	98 f3       	brcs	.-26     	; 0xfa4 <clear_display+0x8>
     fbe:	df 91       	pop	r29
     fc0:	cf 91       	pop	r28
     fc2:	08 95       	ret

00000fc4 <sendStrXY>:
     fc4:	0f 93       	push	r16
     fc6:	1f 93       	push	r17
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	ec 01       	movw	r28, r24
     fce:	86 2f       	mov	r24, r22
     fd0:	06 2f       	mov	r16, r22
     fd2:	64 2f       	mov	r22, r20
     fd4:	d0 df       	rcall	.-96     	; 0xf76 <setXY>
     fd6:	1c c0       	rjmp	.+56     	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
     fd8:	8a 30       	cpi	r24, 0x0A	; 10
     fda:	29 f4       	brne	.+10     	; 0xfe6 <sendStrXY+0x22>
     fdc:	60 e0       	ldi	r22, 0x00	; 0
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	80 0f       	add	r24, r16
     fe2:	c9 df       	rcall	.-110    	; 0xf76 <setXY>
     fe4:	21 96       	adiw	r28, 0x01	; 1
     fe6:	10 e0       	ldi	r17, 0x00	; 0
     fe8:	10 c0       	rjmp	.+32     	; 0x100a <__EEPROM_REGION_LENGTH__+0xa>
     fea:	e8 81       	ld	r30, Y
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	b0 97       	sbiw	r30, 0x20	; 32
     ff0:	ee 0f       	add	r30, r30
     ff2:	ff 1f       	adc	r31, r31
     ff4:	ee 0f       	add	r30, r30
     ff6:	ff 1f       	adc	r31, r31
     ff8:	ee 0f       	add	r30, r30
     ffa:	ff 1f       	adc	r31, r31
     ffc:	e4 5f       	subi	r30, 0xF4	; 244
     ffe:	fd 4f       	sbci	r31, 0xFD	; 253
    1000:	e1 0f       	add	r30, r17
    1002:	f1 1d       	adc	r31, r1
    1004:	84 91       	lpm	r24, Z
    1006:	ab df       	rcall	.-170    	; 0xf5e <SendChar>
    1008:	1f 5f       	subi	r17, 0xFF	; 255
    100a:	18 30       	cpi	r17, 0x08	; 8
    100c:	70 f3       	brcs	.-36     	; 0xfea <sendStrXY+0x26>
    100e:	21 96       	adiw	r28, 0x01	; 1
    1010:	88 81       	ld	r24, Y
    1012:	81 11       	cpse	r24, r1
    1014:	e1 cf       	rjmp	.-62     	; 0xfd8 <sendStrXY+0x14>
    1016:	df 91       	pop	r29
    1018:	cf 91       	pop	r28
    101a:	1f 91       	pop	r17
    101c:	0f 91       	pop	r16
    101e:	08 95       	ret

00001020 <print_fonts>:
    1020:	df 92       	push	r13
    1022:	ef 92       	push	r14
    1024:	ff 92       	push	r15
    1026:	0f 93       	push	r16
    1028:	1f 93       	push	r17
    102a:	cf 93       	push	r28
    102c:	df 93       	push	r29
    102e:	b6 df       	rcall	.-148    	; 0xf9c <clear_display>
    1030:	e1 2c       	mov	r14, r1
    1032:	f1 2c       	mov	r15, r1
    1034:	68 94       	set
    1036:	dd 24       	eor	r13, r13
    1038:	d5 f8       	bld	r13, 5
    103a:	27 c0       	rjmp	.+78     	; 0x108a <print_fonts+0x6a>
    103c:	60 e0       	ldi	r22, 0x00	; 0
    103e:	8e 2d       	mov	r24, r14
    1040:	9a df       	rcall	.-204    	; 0xf76 <setXY>
    1042:	00 e0       	ldi	r16, 0x00	; 0
    1044:	10 e0       	ldi	r17, 0x00	; 0
    1046:	19 c0       	rjmp	.+50     	; 0x107a <print_fonts+0x5a>
    1048:	f8 01       	movw	r30, r16
    104a:	ed 0d       	add	r30, r13
    104c:	f1 1d       	adc	r31, r1
    104e:	b0 97       	sbiw	r30, 0x20	; 32
    1050:	ee 0f       	add	r30, r30
    1052:	ff 1f       	adc	r31, r31
    1054:	ee 0f       	add	r30, r30
    1056:	ff 1f       	adc	r31, r31
    1058:	ee 0f       	add	r30, r30
    105a:	ff 1f       	adc	r31, r31
    105c:	e4 5f       	subi	r30, 0xF4	; 244
    105e:	fd 4f       	sbci	r31, 0xFD	; 253
    1060:	ec 0f       	add	r30, r28
    1062:	fd 1f       	adc	r31, r29
    1064:	84 91       	lpm	r24, Z
    1066:	7b df       	rcall	.-266    	; 0xf5e <SendChar>
    1068:	21 96       	adiw	r28, 0x01	; 1
    106a:	02 c0       	rjmp	.+4      	; 0x1070 <print_fonts+0x50>
    106c:	c0 e0       	ldi	r28, 0x00	; 0
    106e:	d0 e0       	ldi	r29, 0x00	; 0
    1070:	c8 30       	cpi	r28, 0x08	; 8
    1072:	d1 05       	cpc	r29, r1
    1074:	4c f3       	brlt	.-46     	; 0x1048 <print_fonts+0x28>
    1076:	0f 5f       	subi	r16, 0xFF	; 255
    1078:	1f 4f       	sbci	r17, 0xFF	; 255
    107a:	00 31       	cpi	r16, 0x10	; 16
    107c:	11 05       	cpc	r17, r1
    107e:	b4 f3       	brlt	.-20     	; 0x106c <print_fonts+0x4c>
    1080:	80 e1       	ldi	r24, 0x10	; 16
    1082:	d8 0e       	add	r13, r24
    1084:	8f ef       	ldi	r24, 0xFF	; 255
    1086:	e8 1a       	sub	r14, r24
    1088:	f8 0a       	sbc	r15, r24
    108a:	86 e0       	ldi	r24, 0x06	; 6
    108c:	e8 16       	cp	r14, r24
    108e:	f1 04       	cpc	r15, r1
    1090:	ac f2       	brlt	.-86     	; 0x103c <print_fonts+0x1c>
    1092:	df 91       	pop	r29
    1094:	cf 91       	pop	r28
    1096:	1f 91       	pop	r17
    1098:	0f 91       	pop	r16
    109a:	ff 90       	pop	r15
    109c:	ef 90       	pop	r14
    109e:	df 90       	pop	r13
    10a0:	08 95       	ret

000010a2 <init_timer0>:
    10a2:	84 b1       	in	r24, 0x04	; 4
    10a4:	80 68       	ori	r24, 0x80	; 128
    10a6:	84 b9       	out	0x04, r24	; 4
    10a8:	84 b5       	in	r24, 0x24	; 36
    10aa:	82 64       	ori	r24, 0x42	; 66
    10ac:	84 bd       	out	0x24, r24	; 36
    10ae:	85 b5       	in	r24, 0x25	; 37
    10b0:	82 60       	ori	r24, 0x02	; 2
    10b2:	85 bd       	out	0x25, r24	; 37
    10b4:	16 bc       	out	0x26, r1	; 38
    10b6:	89 ef       	ldi	r24, 0xF9	; 249
    10b8:	87 bd       	out	0x27, r24	; 39
    10ba:	ee e6       	ldi	r30, 0x6E	; 110
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	80 81       	ld	r24, Z
    10c0:	82 60       	ori	r24, 0x02	; 2
    10c2:	80 83       	st	Z, r24
    10c4:	08 95       	ret

000010c6 <__subsf3>:
    10c6:	50 58       	subi	r21, 0x80	; 128

000010c8 <__addsf3>:
    10c8:	bb 27       	eor	r27, r27
    10ca:	aa 27       	eor	r26, r26
    10cc:	0e d0       	rcall	.+28     	; 0x10ea <__addsf3x>
    10ce:	c9 c1       	rjmp	.+914    	; 0x1462 <__fp_round>
    10d0:	ba d1       	rcall	.+884    	; 0x1446 <__fp_pscA>
    10d2:	30 f0       	brcs	.+12     	; 0x10e0 <__addsf3+0x18>
    10d4:	bf d1       	rcall	.+894    	; 0x1454 <__fp_pscB>
    10d6:	20 f0       	brcs	.+8      	; 0x10e0 <__addsf3+0x18>
    10d8:	31 f4       	brne	.+12     	; 0x10e6 <__addsf3+0x1e>
    10da:	9f 3f       	cpi	r25, 0xFF	; 255
    10dc:	11 f4       	brne	.+4      	; 0x10e2 <__addsf3+0x1a>
    10de:	1e f4       	brtc	.+6      	; 0x10e6 <__addsf3+0x1e>
    10e0:	8a c1       	rjmp	.+788    	; 0x13f6 <__fp_nan>
    10e2:	0e f4       	brtc	.+2      	; 0x10e6 <__addsf3+0x1e>
    10e4:	e0 95       	com	r30
    10e6:	e7 fb       	bst	r30, 7
    10e8:	80 c1       	rjmp	.+768    	; 0x13ea <__fp_inf>

000010ea <__addsf3x>:
    10ea:	e9 2f       	mov	r30, r25
    10ec:	cb d1       	rcall	.+918    	; 0x1484 <__fp_split3>
    10ee:	80 f3       	brcs	.-32     	; 0x10d0 <__addsf3+0x8>
    10f0:	ba 17       	cp	r27, r26
    10f2:	62 07       	cpc	r22, r18
    10f4:	73 07       	cpc	r23, r19
    10f6:	84 07       	cpc	r24, r20
    10f8:	95 07       	cpc	r25, r21
    10fa:	18 f0       	brcs	.+6      	; 0x1102 <__addsf3x+0x18>
    10fc:	71 f4       	brne	.+28     	; 0x111a <__addsf3x+0x30>
    10fe:	9e f5       	brtc	.+102    	; 0x1166 <__addsf3x+0x7c>
    1100:	e3 c1       	rjmp	.+966    	; 0x14c8 <__fp_zero>
    1102:	0e f4       	brtc	.+2      	; 0x1106 <__addsf3x+0x1c>
    1104:	e0 95       	com	r30
    1106:	0b 2e       	mov	r0, r27
    1108:	ba 2f       	mov	r27, r26
    110a:	a0 2d       	mov	r26, r0
    110c:	0b 01       	movw	r0, r22
    110e:	b9 01       	movw	r22, r18
    1110:	90 01       	movw	r18, r0
    1112:	0c 01       	movw	r0, r24
    1114:	ca 01       	movw	r24, r20
    1116:	a0 01       	movw	r20, r0
    1118:	11 24       	eor	r1, r1
    111a:	ff 27       	eor	r31, r31
    111c:	59 1b       	sub	r21, r25
    111e:	99 f0       	breq	.+38     	; 0x1146 <__addsf3x+0x5c>
    1120:	59 3f       	cpi	r21, 0xF9	; 249
    1122:	50 f4       	brcc	.+20     	; 0x1138 <__addsf3x+0x4e>
    1124:	50 3e       	cpi	r21, 0xE0	; 224
    1126:	68 f1       	brcs	.+90     	; 0x1182 <__addsf3x+0x98>
    1128:	1a 16       	cp	r1, r26
    112a:	f0 40       	sbci	r31, 0x00	; 0
    112c:	a2 2f       	mov	r26, r18
    112e:	23 2f       	mov	r18, r19
    1130:	34 2f       	mov	r19, r20
    1132:	44 27       	eor	r20, r20
    1134:	58 5f       	subi	r21, 0xF8	; 248
    1136:	f3 cf       	rjmp	.-26     	; 0x111e <__addsf3x+0x34>
    1138:	46 95       	lsr	r20
    113a:	37 95       	ror	r19
    113c:	27 95       	ror	r18
    113e:	a7 95       	ror	r26
    1140:	f0 40       	sbci	r31, 0x00	; 0
    1142:	53 95       	inc	r21
    1144:	c9 f7       	brne	.-14     	; 0x1138 <__addsf3x+0x4e>
    1146:	7e f4       	brtc	.+30     	; 0x1166 <__addsf3x+0x7c>
    1148:	1f 16       	cp	r1, r31
    114a:	ba 0b       	sbc	r27, r26
    114c:	62 0b       	sbc	r22, r18
    114e:	73 0b       	sbc	r23, r19
    1150:	84 0b       	sbc	r24, r20
    1152:	ba f0       	brmi	.+46     	; 0x1182 <__addsf3x+0x98>
    1154:	91 50       	subi	r25, 0x01	; 1
    1156:	a1 f0       	breq	.+40     	; 0x1180 <__addsf3x+0x96>
    1158:	ff 0f       	add	r31, r31
    115a:	bb 1f       	adc	r27, r27
    115c:	66 1f       	adc	r22, r22
    115e:	77 1f       	adc	r23, r23
    1160:	88 1f       	adc	r24, r24
    1162:	c2 f7       	brpl	.-16     	; 0x1154 <__addsf3x+0x6a>
    1164:	0e c0       	rjmp	.+28     	; 0x1182 <__addsf3x+0x98>
    1166:	ba 0f       	add	r27, r26
    1168:	62 1f       	adc	r22, r18
    116a:	73 1f       	adc	r23, r19
    116c:	84 1f       	adc	r24, r20
    116e:	48 f4       	brcc	.+18     	; 0x1182 <__addsf3x+0x98>
    1170:	87 95       	ror	r24
    1172:	77 95       	ror	r23
    1174:	67 95       	ror	r22
    1176:	b7 95       	ror	r27
    1178:	f7 95       	ror	r31
    117a:	9e 3f       	cpi	r25, 0xFE	; 254
    117c:	08 f0       	brcs	.+2      	; 0x1180 <__addsf3x+0x96>
    117e:	b3 cf       	rjmp	.-154    	; 0x10e6 <__addsf3+0x1e>
    1180:	93 95       	inc	r25
    1182:	88 0f       	add	r24, r24
    1184:	08 f0       	brcs	.+2      	; 0x1188 <__addsf3x+0x9e>
    1186:	99 27       	eor	r25, r25
    1188:	ee 0f       	add	r30, r30
    118a:	97 95       	ror	r25
    118c:	87 95       	ror	r24
    118e:	08 95       	ret
    1190:	5a d1       	rcall	.+692    	; 0x1446 <__fp_pscA>
    1192:	58 f0       	brcs	.+22     	; 0x11aa <__addsf3x+0xc0>
    1194:	80 e8       	ldi	r24, 0x80	; 128
    1196:	91 e0       	ldi	r25, 0x01	; 1
    1198:	09 f4       	brne	.+2      	; 0x119c <__addsf3x+0xb2>
    119a:	9e ef       	ldi	r25, 0xFE	; 254
    119c:	5b d1       	rcall	.+694    	; 0x1454 <__fp_pscB>
    119e:	28 f0       	brcs	.+10     	; 0x11aa <__addsf3x+0xc0>
    11a0:	40 e8       	ldi	r20, 0x80	; 128
    11a2:	51 e0       	ldi	r21, 0x01	; 1
    11a4:	59 f4       	brne	.+22     	; 0x11bc <atan2+0xe>
    11a6:	5e ef       	ldi	r21, 0xFE	; 254
    11a8:	09 c0       	rjmp	.+18     	; 0x11bc <atan2+0xe>
    11aa:	25 c1       	rjmp	.+586    	; 0x13f6 <__fp_nan>
    11ac:	8d c1       	rjmp	.+794    	; 0x14c8 <__fp_zero>

000011ae <atan2>:
    11ae:	e9 2f       	mov	r30, r25
    11b0:	e0 78       	andi	r30, 0x80	; 128
    11b2:	68 d1       	rcall	.+720    	; 0x1484 <__fp_split3>
    11b4:	68 f3       	brcs	.-38     	; 0x1190 <__addsf3x+0xa6>
    11b6:	09 2e       	mov	r0, r25
    11b8:	05 2a       	or	r0, r21
    11ba:	c1 f3       	breq	.-16     	; 0x11ac <__addsf3x+0xc2>
    11bc:	26 17       	cp	r18, r22
    11be:	37 07       	cpc	r19, r23
    11c0:	48 07       	cpc	r20, r24
    11c2:	59 07       	cpc	r21, r25
    11c4:	38 f0       	brcs	.+14     	; 0x11d4 <atan2+0x26>
    11c6:	0e 2e       	mov	r0, r30
    11c8:	07 f8       	bld	r0, 7
    11ca:	e0 25       	eor	r30, r0
    11cc:	69 f0       	breq	.+26     	; 0x11e8 <atan2+0x3a>
    11ce:	e0 25       	eor	r30, r0
    11d0:	e0 64       	ori	r30, 0x40	; 64
    11d2:	0a c0       	rjmp	.+20     	; 0x11e8 <atan2+0x3a>
    11d4:	ef 63       	ori	r30, 0x3F	; 63
    11d6:	07 f8       	bld	r0, 7
    11d8:	00 94       	com	r0
    11da:	07 fa       	bst	r0, 7
    11dc:	db 01       	movw	r26, r22
    11de:	b9 01       	movw	r22, r18
    11e0:	9d 01       	movw	r18, r26
    11e2:	dc 01       	movw	r26, r24
    11e4:	ca 01       	movw	r24, r20
    11e6:	ad 01       	movw	r20, r26
    11e8:	ef 93       	push	r30
    11ea:	45 d0       	rcall	.+138    	; 0x1276 <__divsf3_pse>
    11ec:	3a d1       	rcall	.+628    	; 0x1462 <__fp_round>
    11ee:	0a d0       	rcall	.+20     	; 0x1204 <atan>
    11f0:	5f 91       	pop	r21
    11f2:	55 23       	and	r21, r21
    11f4:	31 f0       	breq	.+12     	; 0x1202 <atan2+0x54>
    11f6:	2b ed       	ldi	r18, 0xDB	; 219
    11f8:	3f e0       	ldi	r19, 0x0F	; 15
    11fa:	49 e4       	ldi	r20, 0x49	; 73
    11fc:	50 fd       	sbrc	r21, 0
    11fe:	49 ec       	ldi	r20, 0xC9	; 201
    1200:	63 cf       	rjmp	.-314    	; 0x10c8 <__addsf3>
    1202:	08 95       	ret

00001204 <atan>:
    1204:	df 93       	push	r29
    1206:	dd 27       	eor	r29, r29
    1208:	b9 2f       	mov	r27, r25
    120a:	bf 77       	andi	r27, 0x7F	; 127
    120c:	40 e8       	ldi	r20, 0x80	; 128
    120e:	5f e3       	ldi	r21, 0x3F	; 63
    1210:	16 16       	cp	r1, r22
    1212:	17 06       	cpc	r1, r23
    1214:	48 07       	cpc	r20, r24
    1216:	5b 07       	cpc	r21, r27
    1218:	10 f4       	brcc	.+4      	; 0x121e <atan+0x1a>
    121a:	d9 2f       	mov	r29, r25
    121c:	60 d1       	rcall	.+704    	; 0x14de <inverse>
    121e:	9f 93       	push	r25
    1220:	8f 93       	push	r24
    1222:	7f 93       	push	r23
    1224:	6f 93       	push	r22
    1226:	07 d2       	rcall	.+1038   	; 0x1636 <square>
    1228:	e4 ee       	ldi	r30, 0xE4	; 228
    122a:	f0 e0       	ldi	r31, 0x00	; 0
    122c:	e7 d0       	rcall	.+462    	; 0x13fc <__fp_powser>
    122e:	19 d1       	rcall	.+562    	; 0x1462 <__fp_round>
    1230:	2f 91       	pop	r18
    1232:	3f 91       	pop	r19
    1234:	4f 91       	pop	r20
    1236:	5f 91       	pop	r21
    1238:	65 d1       	rcall	.+714    	; 0x1504 <__mulsf3x>
    123a:	dd 23       	and	r29, r29
    123c:	49 f0       	breq	.+18     	; 0x1250 <atan+0x4c>
    123e:	90 58       	subi	r25, 0x80	; 128
    1240:	a2 ea       	ldi	r26, 0xA2	; 162
    1242:	2a ed       	ldi	r18, 0xDA	; 218
    1244:	3f e0       	ldi	r19, 0x0F	; 15
    1246:	49 ec       	ldi	r20, 0xC9	; 201
    1248:	5f e3       	ldi	r21, 0x3F	; 63
    124a:	d0 78       	andi	r29, 0x80	; 128
    124c:	5d 27       	eor	r21, r29
    124e:	4d df       	rcall	.-358    	; 0x10ea <__addsf3x>
    1250:	df 91       	pop	r29
    1252:	07 c1       	rjmp	.+526    	; 0x1462 <__fp_round>

00001254 <__cmpsf2>:
    1254:	a6 d0       	rcall	.+332    	; 0x13a2 <__fp_cmp>
    1256:	08 f4       	brcc	.+2      	; 0x125a <__cmpsf2+0x6>
    1258:	81 e0       	ldi	r24, 0x01	; 1
    125a:	08 95       	ret
    125c:	fb d0       	rcall	.+502    	; 0x1454 <__fp_pscB>
    125e:	40 f0       	brcs	.+16     	; 0x1270 <__cmpsf2+0x1c>
    1260:	f2 d0       	rcall	.+484    	; 0x1446 <__fp_pscA>
    1262:	30 f0       	brcs	.+12     	; 0x1270 <__cmpsf2+0x1c>
    1264:	21 f4       	brne	.+8      	; 0x126e <__cmpsf2+0x1a>
    1266:	5f 3f       	cpi	r21, 0xFF	; 255
    1268:	19 f0       	breq	.+6      	; 0x1270 <__cmpsf2+0x1c>
    126a:	bf c0       	rjmp	.+382    	; 0x13ea <__fp_inf>
    126c:	51 11       	cpse	r21, r1
    126e:	2d c1       	rjmp	.+602    	; 0x14ca <__fp_szero>
    1270:	c2 c0       	rjmp	.+388    	; 0x13f6 <__fp_nan>

00001272 <__divsf3x>:
    1272:	08 d1       	rcall	.+528    	; 0x1484 <__fp_split3>
    1274:	98 f3       	brcs	.-26     	; 0x125c <__cmpsf2+0x8>

00001276 <__divsf3_pse>:
    1276:	99 23       	and	r25, r25
    1278:	c9 f3       	breq	.-14     	; 0x126c <__cmpsf2+0x18>
    127a:	55 23       	and	r21, r21
    127c:	b1 f3       	breq	.-20     	; 0x126a <__cmpsf2+0x16>
    127e:	95 1b       	sub	r25, r21
    1280:	55 0b       	sbc	r21, r21
    1282:	bb 27       	eor	r27, r27
    1284:	aa 27       	eor	r26, r26
    1286:	62 17       	cp	r22, r18
    1288:	73 07       	cpc	r23, r19
    128a:	84 07       	cpc	r24, r20
    128c:	38 f0       	brcs	.+14     	; 0x129c <__divsf3_pse+0x26>
    128e:	9f 5f       	subi	r25, 0xFF	; 255
    1290:	5f 4f       	sbci	r21, 0xFF	; 255
    1292:	22 0f       	add	r18, r18
    1294:	33 1f       	adc	r19, r19
    1296:	44 1f       	adc	r20, r20
    1298:	aa 1f       	adc	r26, r26
    129a:	a9 f3       	breq	.-22     	; 0x1286 <__divsf3_pse+0x10>
    129c:	33 d0       	rcall	.+102    	; 0x1304 <__divsf3_pse+0x8e>
    129e:	0e 2e       	mov	r0, r30
    12a0:	3a f0       	brmi	.+14     	; 0x12b0 <__divsf3_pse+0x3a>
    12a2:	e0 e8       	ldi	r30, 0x80	; 128
    12a4:	30 d0       	rcall	.+96     	; 0x1306 <__divsf3_pse+0x90>
    12a6:	91 50       	subi	r25, 0x01	; 1
    12a8:	50 40       	sbci	r21, 0x00	; 0
    12aa:	e6 95       	lsr	r30
    12ac:	00 1c       	adc	r0, r0
    12ae:	ca f7       	brpl	.-14     	; 0x12a2 <__divsf3_pse+0x2c>
    12b0:	29 d0       	rcall	.+82     	; 0x1304 <__divsf3_pse+0x8e>
    12b2:	fe 2f       	mov	r31, r30
    12b4:	27 d0       	rcall	.+78     	; 0x1304 <__divsf3_pse+0x8e>
    12b6:	66 0f       	add	r22, r22
    12b8:	77 1f       	adc	r23, r23
    12ba:	88 1f       	adc	r24, r24
    12bc:	bb 1f       	adc	r27, r27
    12be:	26 17       	cp	r18, r22
    12c0:	37 07       	cpc	r19, r23
    12c2:	48 07       	cpc	r20, r24
    12c4:	ab 07       	cpc	r26, r27
    12c6:	b0 e8       	ldi	r27, 0x80	; 128
    12c8:	09 f0       	breq	.+2      	; 0x12cc <__divsf3_pse+0x56>
    12ca:	bb 0b       	sbc	r27, r27
    12cc:	80 2d       	mov	r24, r0
    12ce:	bf 01       	movw	r22, r30
    12d0:	ff 27       	eor	r31, r31
    12d2:	93 58       	subi	r25, 0x83	; 131
    12d4:	5f 4f       	sbci	r21, 0xFF	; 255
    12d6:	2a f0       	brmi	.+10     	; 0x12e2 <__divsf3_pse+0x6c>
    12d8:	9e 3f       	cpi	r25, 0xFE	; 254
    12da:	51 05       	cpc	r21, r1
    12dc:	68 f0       	brcs	.+26     	; 0x12f8 <__divsf3_pse+0x82>
    12de:	85 c0       	rjmp	.+266    	; 0x13ea <__fp_inf>
    12e0:	f4 c0       	rjmp	.+488    	; 0x14ca <__fp_szero>
    12e2:	5f 3f       	cpi	r21, 0xFF	; 255
    12e4:	ec f3       	brlt	.-6      	; 0x12e0 <__divsf3_pse+0x6a>
    12e6:	98 3e       	cpi	r25, 0xE8	; 232
    12e8:	dc f3       	brlt	.-10     	; 0x12e0 <__divsf3_pse+0x6a>
    12ea:	86 95       	lsr	r24
    12ec:	77 95       	ror	r23
    12ee:	67 95       	ror	r22
    12f0:	b7 95       	ror	r27
    12f2:	f7 95       	ror	r31
    12f4:	9f 5f       	subi	r25, 0xFF	; 255
    12f6:	c9 f7       	brne	.-14     	; 0x12ea <__divsf3_pse+0x74>
    12f8:	88 0f       	add	r24, r24
    12fa:	91 1d       	adc	r25, r1
    12fc:	96 95       	lsr	r25
    12fe:	87 95       	ror	r24
    1300:	97 f9       	bld	r25, 7
    1302:	08 95       	ret
    1304:	e1 e0       	ldi	r30, 0x01	; 1
    1306:	66 0f       	add	r22, r22
    1308:	77 1f       	adc	r23, r23
    130a:	88 1f       	adc	r24, r24
    130c:	bb 1f       	adc	r27, r27
    130e:	62 17       	cp	r22, r18
    1310:	73 07       	cpc	r23, r19
    1312:	84 07       	cpc	r24, r20
    1314:	ba 07       	cpc	r27, r26
    1316:	20 f0       	brcs	.+8      	; 0x1320 <__divsf3_pse+0xaa>
    1318:	62 1b       	sub	r22, r18
    131a:	73 0b       	sbc	r23, r19
    131c:	84 0b       	sbc	r24, r20
    131e:	ba 0b       	sbc	r27, r26
    1320:	ee 1f       	adc	r30, r30
    1322:	88 f7       	brcc	.-30     	; 0x1306 <__divsf3_pse+0x90>
    1324:	e0 95       	com	r30
    1326:	08 95       	ret

00001328 <__floatunsisf>:
    1328:	e8 94       	clt
    132a:	09 c0       	rjmp	.+18     	; 0x133e <__floatsisf+0x12>

0000132c <__floatsisf>:
    132c:	97 fb       	bst	r25, 7
    132e:	3e f4       	brtc	.+14     	; 0x133e <__floatsisf+0x12>
    1330:	90 95       	com	r25
    1332:	80 95       	com	r24
    1334:	70 95       	com	r23
    1336:	61 95       	neg	r22
    1338:	7f 4f       	sbci	r23, 0xFF	; 255
    133a:	8f 4f       	sbci	r24, 0xFF	; 255
    133c:	9f 4f       	sbci	r25, 0xFF	; 255
    133e:	99 23       	and	r25, r25
    1340:	a9 f0       	breq	.+42     	; 0x136c <__floatsisf+0x40>
    1342:	f9 2f       	mov	r31, r25
    1344:	96 e9       	ldi	r25, 0x96	; 150
    1346:	bb 27       	eor	r27, r27
    1348:	93 95       	inc	r25
    134a:	f6 95       	lsr	r31
    134c:	87 95       	ror	r24
    134e:	77 95       	ror	r23
    1350:	67 95       	ror	r22
    1352:	b7 95       	ror	r27
    1354:	f1 11       	cpse	r31, r1
    1356:	f8 cf       	rjmp	.-16     	; 0x1348 <__floatsisf+0x1c>
    1358:	fa f4       	brpl	.+62     	; 0x1398 <__floatsisf+0x6c>
    135a:	bb 0f       	add	r27, r27
    135c:	11 f4       	brne	.+4      	; 0x1362 <__floatsisf+0x36>
    135e:	60 ff       	sbrs	r22, 0
    1360:	1b c0       	rjmp	.+54     	; 0x1398 <__floatsisf+0x6c>
    1362:	6f 5f       	subi	r22, 0xFF	; 255
    1364:	7f 4f       	sbci	r23, 0xFF	; 255
    1366:	8f 4f       	sbci	r24, 0xFF	; 255
    1368:	9f 4f       	sbci	r25, 0xFF	; 255
    136a:	16 c0       	rjmp	.+44     	; 0x1398 <__floatsisf+0x6c>
    136c:	88 23       	and	r24, r24
    136e:	11 f0       	breq	.+4      	; 0x1374 <__floatsisf+0x48>
    1370:	96 e9       	ldi	r25, 0x96	; 150
    1372:	11 c0       	rjmp	.+34     	; 0x1396 <__floatsisf+0x6a>
    1374:	77 23       	and	r23, r23
    1376:	21 f0       	breq	.+8      	; 0x1380 <__floatsisf+0x54>
    1378:	9e e8       	ldi	r25, 0x8E	; 142
    137a:	87 2f       	mov	r24, r23
    137c:	76 2f       	mov	r23, r22
    137e:	05 c0       	rjmp	.+10     	; 0x138a <__floatsisf+0x5e>
    1380:	66 23       	and	r22, r22
    1382:	71 f0       	breq	.+28     	; 0x13a0 <__floatsisf+0x74>
    1384:	96 e8       	ldi	r25, 0x86	; 134
    1386:	86 2f       	mov	r24, r22
    1388:	70 e0       	ldi	r23, 0x00	; 0
    138a:	60 e0       	ldi	r22, 0x00	; 0
    138c:	2a f0       	brmi	.+10     	; 0x1398 <__floatsisf+0x6c>
    138e:	9a 95       	dec	r25
    1390:	66 0f       	add	r22, r22
    1392:	77 1f       	adc	r23, r23
    1394:	88 1f       	adc	r24, r24
    1396:	da f7       	brpl	.-10     	; 0x138e <__floatsisf+0x62>
    1398:	88 0f       	add	r24, r24
    139a:	96 95       	lsr	r25
    139c:	87 95       	ror	r24
    139e:	97 f9       	bld	r25, 7
    13a0:	08 95       	ret

000013a2 <__fp_cmp>:
    13a2:	99 0f       	add	r25, r25
    13a4:	00 08       	sbc	r0, r0
    13a6:	55 0f       	add	r21, r21
    13a8:	aa 0b       	sbc	r26, r26
    13aa:	e0 e8       	ldi	r30, 0x80	; 128
    13ac:	fe ef       	ldi	r31, 0xFE	; 254
    13ae:	16 16       	cp	r1, r22
    13b0:	17 06       	cpc	r1, r23
    13b2:	e8 07       	cpc	r30, r24
    13b4:	f9 07       	cpc	r31, r25
    13b6:	c0 f0       	brcs	.+48     	; 0x13e8 <__fp_cmp+0x46>
    13b8:	12 16       	cp	r1, r18
    13ba:	13 06       	cpc	r1, r19
    13bc:	e4 07       	cpc	r30, r20
    13be:	f5 07       	cpc	r31, r21
    13c0:	98 f0       	brcs	.+38     	; 0x13e8 <__fp_cmp+0x46>
    13c2:	62 1b       	sub	r22, r18
    13c4:	73 0b       	sbc	r23, r19
    13c6:	84 0b       	sbc	r24, r20
    13c8:	95 0b       	sbc	r25, r21
    13ca:	39 f4       	brne	.+14     	; 0x13da <__fp_cmp+0x38>
    13cc:	0a 26       	eor	r0, r26
    13ce:	61 f0       	breq	.+24     	; 0x13e8 <__fp_cmp+0x46>
    13d0:	23 2b       	or	r18, r19
    13d2:	24 2b       	or	r18, r20
    13d4:	25 2b       	or	r18, r21
    13d6:	21 f4       	brne	.+8      	; 0x13e0 <__fp_cmp+0x3e>
    13d8:	08 95       	ret
    13da:	0a 26       	eor	r0, r26
    13dc:	09 f4       	brne	.+2      	; 0x13e0 <__fp_cmp+0x3e>
    13de:	a1 40       	sbci	r26, 0x01	; 1
    13e0:	a6 95       	lsr	r26
    13e2:	8f ef       	ldi	r24, 0xFF	; 255
    13e4:	81 1d       	adc	r24, r1
    13e6:	81 1d       	adc	r24, r1
    13e8:	08 95       	ret

000013ea <__fp_inf>:
    13ea:	97 f9       	bld	r25, 7
    13ec:	9f 67       	ori	r25, 0x7F	; 127
    13ee:	80 e8       	ldi	r24, 0x80	; 128
    13f0:	70 e0       	ldi	r23, 0x00	; 0
    13f2:	60 e0       	ldi	r22, 0x00	; 0
    13f4:	08 95       	ret

000013f6 <__fp_nan>:
    13f6:	9f ef       	ldi	r25, 0xFF	; 255
    13f8:	80 ec       	ldi	r24, 0xC0	; 192
    13fa:	08 95       	ret

000013fc <__fp_powser>:
    13fc:	df 93       	push	r29
    13fe:	cf 93       	push	r28
    1400:	1f 93       	push	r17
    1402:	0f 93       	push	r16
    1404:	ff 92       	push	r15
    1406:	ef 92       	push	r14
    1408:	df 92       	push	r13
    140a:	7b 01       	movw	r14, r22
    140c:	8c 01       	movw	r16, r24
    140e:	68 94       	set
    1410:	05 c0       	rjmp	.+10     	; 0x141c <__fp_powser+0x20>
    1412:	da 2e       	mov	r13, r26
    1414:	ef 01       	movw	r28, r30
    1416:	76 d0       	rcall	.+236    	; 0x1504 <__mulsf3x>
    1418:	fe 01       	movw	r30, r28
    141a:	e8 94       	clt
    141c:	a5 91       	lpm	r26, Z+
    141e:	25 91       	lpm	r18, Z+
    1420:	35 91       	lpm	r19, Z+
    1422:	45 91       	lpm	r20, Z+
    1424:	55 91       	lpm	r21, Z+
    1426:	ae f3       	brts	.-22     	; 0x1412 <__fp_powser+0x16>
    1428:	ef 01       	movw	r28, r30
    142a:	5f de       	rcall	.-834    	; 0x10ea <__addsf3x>
    142c:	fe 01       	movw	r30, r28
    142e:	97 01       	movw	r18, r14
    1430:	a8 01       	movw	r20, r16
    1432:	da 94       	dec	r13
    1434:	79 f7       	brne	.-34     	; 0x1414 <__fp_powser+0x18>
    1436:	df 90       	pop	r13
    1438:	ef 90       	pop	r14
    143a:	ff 90       	pop	r15
    143c:	0f 91       	pop	r16
    143e:	1f 91       	pop	r17
    1440:	cf 91       	pop	r28
    1442:	df 91       	pop	r29
    1444:	08 95       	ret

00001446 <__fp_pscA>:
    1446:	00 24       	eor	r0, r0
    1448:	0a 94       	dec	r0
    144a:	16 16       	cp	r1, r22
    144c:	17 06       	cpc	r1, r23
    144e:	18 06       	cpc	r1, r24
    1450:	09 06       	cpc	r0, r25
    1452:	08 95       	ret

00001454 <__fp_pscB>:
    1454:	00 24       	eor	r0, r0
    1456:	0a 94       	dec	r0
    1458:	12 16       	cp	r1, r18
    145a:	13 06       	cpc	r1, r19
    145c:	14 06       	cpc	r1, r20
    145e:	05 06       	cpc	r0, r21
    1460:	08 95       	ret

00001462 <__fp_round>:
    1462:	09 2e       	mov	r0, r25
    1464:	03 94       	inc	r0
    1466:	00 0c       	add	r0, r0
    1468:	11 f4       	brne	.+4      	; 0x146e <__fp_round+0xc>
    146a:	88 23       	and	r24, r24
    146c:	52 f0       	brmi	.+20     	; 0x1482 <__fp_round+0x20>
    146e:	bb 0f       	add	r27, r27
    1470:	40 f4       	brcc	.+16     	; 0x1482 <__fp_round+0x20>
    1472:	bf 2b       	or	r27, r31
    1474:	11 f4       	brne	.+4      	; 0x147a <__fp_round+0x18>
    1476:	60 ff       	sbrs	r22, 0
    1478:	04 c0       	rjmp	.+8      	; 0x1482 <__fp_round+0x20>
    147a:	6f 5f       	subi	r22, 0xFF	; 255
    147c:	7f 4f       	sbci	r23, 0xFF	; 255
    147e:	8f 4f       	sbci	r24, 0xFF	; 255
    1480:	9f 4f       	sbci	r25, 0xFF	; 255
    1482:	08 95       	ret

00001484 <__fp_split3>:
    1484:	57 fd       	sbrc	r21, 7
    1486:	90 58       	subi	r25, 0x80	; 128
    1488:	44 0f       	add	r20, r20
    148a:	55 1f       	adc	r21, r21
    148c:	59 f0       	breq	.+22     	; 0x14a4 <__fp_splitA+0x10>
    148e:	5f 3f       	cpi	r21, 0xFF	; 255
    1490:	71 f0       	breq	.+28     	; 0x14ae <__fp_splitA+0x1a>
    1492:	47 95       	ror	r20

00001494 <__fp_splitA>:
    1494:	88 0f       	add	r24, r24
    1496:	97 fb       	bst	r25, 7
    1498:	99 1f       	adc	r25, r25
    149a:	61 f0       	breq	.+24     	; 0x14b4 <__fp_splitA+0x20>
    149c:	9f 3f       	cpi	r25, 0xFF	; 255
    149e:	79 f0       	breq	.+30     	; 0x14be <__fp_splitA+0x2a>
    14a0:	87 95       	ror	r24
    14a2:	08 95       	ret
    14a4:	12 16       	cp	r1, r18
    14a6:	13 06       	cpc	r1, r19
    14a8:	14 06       	cpc	r1, r20
    14aa:	55 1f       	adc	r21, r21
    14ac:	f2 cf       	rjmp	.-28     	; 0x1492 <__fp_split3+0xe>
    14ae:	46 95       	lsr	r20
    14b0:	f1 df       	rcall	.-30     	; 0x1494 <__fp_splitA>
    14b2:	08 c0       	rjmp	.+16     	; 0x14c4 <__fp_splitA+0x30>
    14b4:	16 16       	cp	r1, r22
    14b6:	17 06       	cpc	r1, r23
    14b8:	18 06       	cpc	r1, r24
    14ba:	99 1f       	adc	r25, r25
    14bc:	f1 cf       	rjmp	.-30     	; 0x14a0 <__fp_splitA+0xc>
    14be:	86 95       	lsr	r24
    14c0:	71 05       	cpc	r23, r1
    14c2:	61 05       	cpc	r22, r1
    14c4:	08 94       	sec
    14c6:	08 95       	ret

000014c8 <__fp_zero>:
    14c8:	e8 94       	clt

000014ca <__fp_szero>:
    14ca:	bb 27       	eor	r27, r27
    14cc:	66 27       	eor	r22, r22
    14ce:	77 27       	eor	r23, r23
    14d0:	cb 01       	movw	r24, r22
    14d2:	97 f9       	bld	r25, 7
    14d4:	08 95       	ret

000014d6 <__gesf2>:
    14d6:	65 df       	rcall	.-310    	; 0x13a2 <__fp_cmp>
    14d8:	08 f4       	brcc	.+2      	; 0x14dc <__gesf2+0x6>
    14da:	8f ef       	ldi	r24, 0xFF	; 255
    14dc:	08 95       	ret

000014de <inverse>:
    14de:	9b 01       	movw	r18, r22
    14e0:	ac 01       	movw	r20, r24
    14e2:	60 e0       	ldi	r22, 0x00	; 0
    14e4:	70 e0       	ldi	r23, 0x00	; 0
    14e6:	80 e8       	ldi	r24, 0x80	; 128
    14e8:	9f e3       	ldi	r25, 0x3F	; 63
    14ea:	a8 c0       	rjmp	.+336    	; 0x163c <__divsf3>

000014ec <__mulsf3>:
    14ec:	0b d0       	rcall	.+22     	; 0x1504 <__mulsf3x>
    14ee:	b9 cf       	rjmp	.-142    	; 0x1462 <__fp_round>
    14f0:	aa df       	rcall	.-172    	; 0x1446 <__fp_pscA>
    14f2:	28 f0       	brcs	.+10     	; 0x14fe <__mulsf3+0x12>
    14f4:	af df       	rcall	.-162    	; 0x1454 <__fp_pscB>
    14f6:	18 f0       	brcs	.+6      	; 0x14fe <__mulsf3+0x12>
    14f8:	95 23       	and	r25, r21
    14fa:	09 f0       	breq	.+2      	; 0x14fe <__mulsf3+0x12>
    14fc:	76 cf       	rjmp	.-276    	; 0x13ea <__fp_inf>
    14fe:	7b cf       	rjmp	.-266    	; 0x13f6 <__fp_nan>
    1500:	11 24       	eor	r1, r1
    1502:	e3 cf       	rjmp	.-58     	; 0x14ca <__fp_szero>

00001504 <__mulsf3x>:
    1504:	bf df       	rcall	.-130    	; 0x1484 <__fp_split3>
    1506:	a0 f3       	brcs	.-24     	; 0x14f0 <__mulsf3+0x4>

00001508 <__mulsf3_pse>:
    1508:	95 9f       	mul	r25, r21
    150a:	d1 f3       	breq	.-12     	; 0x1500 <__mulsf3+0x14>
    150c:	95 0f       	add	r25, r21
    150e:	50 e0       	ldi	r21, 0x00	; 0
    1510:	55 1f       	adc	r21, r21
    1512:	62 9f       	mul	r22, r18
    1514:	f0 01       	movw	r30, r0
    1516:	72 9f       	mul	r23, r18
    1518:	bb 27       	eor	r27, r27
    151a:	f0 0d       	add	r31, r0
    151c:	b1 1d       	adc	r27, r1
    151e:	63 9f       	mul	r22, r19
    1520:	aa 27       	eor	r26, r26
    1522:	f0 0d       	add	r31, r0
    1524:	b1 1d       	adc	r27, r1
    1526:	aa 1f       	adc	r26, r26
    1528:	64 9f       	mul	r22, r20
    152a:	66 27       	eor	r22, r22
    152c:	b0 0d       	add	r27, r0
    152e:	a1 1d       	adc	r26, r1
    1530:	66 1f       	adc	r22, r22
    1532:	82 9f       	mul	r24, r18
    1534:	22 27       	eor	r18, r18
    1536:	b0 0d       	add	r27, r0
    1538:	a1 1d       	adc	r26, r1
    153a:	62 1f       	adc	r22, r18
    153c:	73 9f       	mul	r23, r19
    153e:	b0 0d       	add	r27, r0
    1540:	a1 1d       	adc	r26, r1
    1542:	62 1f       	adc	r22, r18
    1544:	83 9f       	mul	r24, r19
    1546:	a0 0d       	add	r26, r0
    1548:	61 1d       	adc	r22, r1
    154a:	22 1f       	adc	r18, r18
    154c:	74 9f       	mul	r23, r20
    154e:	33 27       	eor	r19, r19
    1550:	a0 0d       	add	r26, r0
    1552:	61 1d       	adc	r22, r1
    1554:	23 1f       	adc	r18, r19
    1556:	84 9f       	mul	r24, r20
    1558:	60 0d       	add	r22, r0
    155a:	21 1d       	adc	r18, r1
    155c:	82 2f       	mov	r24, r18
    155e:	76 2f       	mov	r23, r22
    1560:	6a 2f       	mov	r22, r26
    1562:	11 24       	eor	r1, r1
    1564:	9f 57       	subi	r25, 0x7F	; 127
    1566:	50 40       	sbci	r21, 0x00	; 0
    1568:	8a f0       	brmi	.+34     	; 0x158c <__mulsf3_pse+0x84>
    156a:	e1 f0       	breq	.+56     	; 0x15a4 <__mulsf3_pse+0x9c>
    156c:	88 23       	and	r24, r24
    156e:	4a f0       	brmi	.+18     	; 0x1582 <__mulsf3_pse+0x7a>
    1570:	ee 0f       	add	r30, r30
    1572:	ff 1f       	adc	r31, r31
    1574:	bb 1f       	adc	r27, r27
    1576:	66 1f       	adc	r22, r22
    1578:	77 1f       	adc	r23, r23
    157a:	88 1f       	adc	r24, r24
    157c:	91 50       	subi	r25, 0x01	; 1
    157e:	50 40       	sbci	r21, 0x00	; 0
    1580:	a9 f7       	brne	.-22     	; 0x156c <__mulsf3_pse+0x64>
    1582:	9e 3f       	cpi	r25, 0xFE	; 254
    1584:	51 05       	cpc	r21, r1
    1586:	70 f0       	brcs	.+28     	; 0x15a4 <__mulsf3_pse+0x9c>
    1588:	30 cf       	rjmp	.-416    	; 0x13ea <__fp_inf>
    158a:	9f cf       	rjmp	.-194    	; 0x14ca <__fp_szero>
    158c:	5f 3f       	cpi	r21, 0xFF	; 255
    158e:	ec f3       	brlt	.-6      	; 0x158a <__mulsf3_pse+0x82>
    1590:	98 3e       	cpi	r25, 0xE8	; 232
    1592:	dc f3       	brlt	.-10     	; 0x158a <__mulsf3_pse+0x82>
    1594:	86 95       	lsr	r24
    1596:	77 95       	ror	r23
    1598:	67 95       	ror	r22
    159a:	b7 95       	ror	r27
    159c:	f7 95       	ror	r31
    159e:	e7 95       	ror	r30
    15a0:	9f 5f       	subi	r25, 0xFF	; 255
    15a2:	c1 f7       	brne	.-16     	; 0x1594 <__mulsf3_pse+0x8c>
    15a4:	fe 2b       	or	r31, r30
    15a6:	88 0f       	add	r24, r24
    15a8:	91 1d       	adc	r25, r1
    15aa:	96 95       	lsr	r25
    15ac:	87 95       	ror	r24
    15ae:	97 f9       	bld	r25, 7
    15b0:	08 95       	ret
    15b2:	11 f4       	brne	.+4      	; 0x15b8 <__mulsf3_pse+0xb0>
    15b4:	0e f4       	brtc	.+2      	; 0x15b8 <__mulsf3_pse+0xb0>
    15b6:	1f cf       	rjmp	.-450    	; 0x13f6 <__fp_nan>
    15b8:	43 c0       	rjmp	.+134    	; 0x1640 <__fp_mpack>

000015ba <sqrt>:
    15ba:	6c df       	rcall	.-296    	; 0x1494 <__fp_splitA>
    15bc:	d0 f3       	brcs	.-12     	; 0x15b2 <__mulsf3_pse+0xaa>
    15be:	99 23       	and	r25, r25
    15c0:	d9 f3       	breq	.-10     	; 0x15b8 <__mulsf3_pse+0xb0>
    15c2:	ce f3       	brts	.-14     	; 0x15b6 <__mulsf3_pse+0xae>
    15c4:	9f 57       	subi	r25, 0x7F	; 127
    15c6:	55 0b       	sbc	r21, r21
    15c8:	87 ff       	sbrs	r24, 7
    15ca:	48 d0       	rcall	.+144    	; 0x165c <__fp_norm2>
    15cc:	00 24       	eor	r0, r0
    15ce:	a0 e6       	ldi	r26, 0x60	; 96
    15d0:	40 ea       	ldi	r20, 0xA0	; 160
    15d2:	90 01       	movw	r18, r0
    15d4:	80 58       	subi	r24, 0x80	; 128
    15d6:	56 95       	lsr	r21
    15d8:	97 95       	ror	r25
    15da:	28 f4       	brcc	.+10     	; 0x15e6 <sqrt+0x2c>
    15dc:	80 5c       	subi	r24, 0xC0	; 192
    15de:	66 0f       	add	r22, r22
    15e0:	77 1f       	adc	r23, r23
    15e2:	88 1f       	adc	r24, r24
    15e4:	20 f0       	brcs	.+8      	; 0x15ee <sqrt+0x34>
    15e6:	26 17       	cp	r18, r22
    15e8:	37 07       	cpc	r19, r23
    15ea:	48 07       	cpc	r20, r24
    15ec:	30 f4       	brcc	.+12     	; 0x15fa <sqrt+0x40>
    15ee:	62 1b       	sub	r22, r18
    15f0:	73 0b       	sbc	r23, r19
    15f2:	84 0b       	sbc	r24, r20
    15f4:	20 29       	or	r18, r0
    15f6:	31 29       	or	r19, r1
    15f8:	4a 2b       	or	r20, r26
    15fa:	a6 95       	lsr	r26
    15fc:	17 94       	ror	r1
    15fe:	07 94       	ror	r0
    1600:	20 25       	eor	r18, r0
    1602:	31 25       	eor	r19, r1
    1604:	4a 27       	eor	r20, r26
    1606:	58 f7       	brcc	.-42     	; 0x15de <sqrt+0x24>
    1608:	66 0f       	add	r22, r22
    160a:	77 1f       	adc	r23, r23
    160c:	88 1f       	adc	r24, r24
    160e:	20 f0       	brcs	.+8      	; 0x1618 <sqrt+0x5e>
    1610:	26 17       	cp	r18, r22
    1612:	37 07       	cpc	r19, r23
    1614:	48 07       	cpc	r20, r24
    1616:	30 f4       	brcc	.+12     	; 0x1624 <sqrt+0x6a>
    1618:	62 0b       	sbc	r22, r18
    161a:	73 0b       	sbc	r23, r19
    161c:	84 0b       	sbc	r24, r20
    161e:	20 0d       	add	r18, r0
    1620:	31 1d       	adc	r19, r1
    1622:	41 1d       	adc	r20, r1
    1624:	a0 95       	com	r26
    1626:	81 f7       	brne	.-32     	; 0x1608 <sqrt+0x4e>
    1628:	b9 01       	movw	r22, r18
    162a:	84 2f       	mov	r24, r20
    162c:	91 58       	subi	r25, 0x81	; 129
    162e:	88 0f       	add	r24, r24
    1630:	96 95       	lsr	r25
    1632:	87 95       	ror	r24
    1634:	08 95       	ret

00001636 <square>:
    1636:	9b 01       	movw	r18, r22
    1638:	ac 01       	movw	r20, r24
    163a:	58 cf       	rjmp	.-336    	; 0x14ec <__mulsf3>

0000163c <__divsf3>:
    163c:	1a de       	rcall	.-972    	; 0x1272 <__divsf3x>
    163e:	11 cf       	rjmp	.-478    	; 0x1462 <__fp_round>

00001640 <__fp_mpack>:
    1640:	9f 3f       	cpi	r25, 0xFF	; 255
    1642:	31 f0       	breq	.+12     	; 0x1650 <__fp_mpack_finite+0xc>

00001644 <__fp_mpack_finite>:
    1644:	91 50       	subi	r25, 0x01	; 1
    1646:	20 f4       	brcc	.+8      	; 0x1650 <__fp_mpack_finite+0xc>
    1648:	87 95       	ror	r24
    164a:	77 95       	ror	r23
    164c:	67 95       	ror	r22
    164e:	b7 95       	ror	r27
    1650:	88 0f       	add	r24, r24
    1652:	91 1d       	adc	r25, r1
    1654:	96 95       	lsr	r25
    1656:	87 95       	ror	r24
    1658:	97 f9       	bld	r25, 7
    165a:	08 95       	ret

0000165c <__fp_norm2>:
    165c:	91 50       	subi	r25, 0x01	; 1
    165e:	50 40       	sbci	r21, 0x00	; 0
    1660:	66 0f       	add	r22, r22
    1662:	77 1f       	adc	r23, r23
    1664:	88 1f       	adc	r24, r24
    1666:	d2 f7       	brpl	.-12     	; 0x165c <__fp_norm2>
    1668:	08 95       	ret

0000166a <dtostrf>:
    166a:	ef 92       	push	r14
    166c:	0f 93       	push	r16
    166e:	1f 93       	push	r17
    1670:	cf 93       	push	r28
    1672:	df 93       	push	r29
    1674:	e8 01       	movw	r28, r16
    1676:	47 fd       	sbrc	r20, 7
    1678:	02 c0       	rjmp	.+4      	; 0x167e <dtostrf+0x14>
    167a:	34 e0       	ldi	r19, 0x04	; 4
    167c:	01 c0       	rjmp	.+2      	; 0x1680 <dtostrf+0x16>
    167e:	34 e1       	ldi	r19, 0x14	; 20
    1680:	04 2e       	mov	r0, r20
    1682:	00 0c       	add	r0, r0
    1684:	55 0b       	sbc	r21, r21
    1686:	57 ff       	sbrs	r21, 7
    1688:	03 c0       	rjmp	.+6      	; 0x1690 <dtostrf+0x26>
    168a:	51 95       	neg	r21
    168c:	41 95       	neg	r20
    168e:	51 09       	sbc	r21, r1
    1690:	e3 2e       	mov	r14, r19
    1692:	02 2f       	mov	r16, r18
    1694:	24 2f       	mov	r18, r20
    1696:	ae 01       	movw	r20, r28
    1698:	07 d0       	rcall	.+14     	; 0x16a8 <dtoa_prf>
    169a:	ce 01       	movw	r24, r28
    169c:	df 91       	pop	r29
    169e:	cf 91       	pop	r28
    16a0:	1f 91       	pop	r17
    16a2:	0f 91       	pop	r16
    16a4:	ef 90       	pop	r14
    16a6:	08 95       	ret

000016a8 <dtoa_prf>:
    16a8:	8f 92       	push	r8
    16aa:	9f 92       	push	r9
    16ac:	af 92       	push	r10
    16ae:	bf 92       	push	r11
    16b0:	cf 92       	push	r12
    16b2:	df 92       	push	r13
    16b4:	ef 92       	push	r14
    16b6:	ff 92       	push	r15
    16b8:	0f 93       	push	r16
    16ba:	1f 93       	push	r17
    16bc:	cf 93       	push	r28
    16be:	df 93       	push	r29
    16c0:	cd b7       	in	r28, 0x3d	; 61
    16c2:	de b7       	in	r29, 0x3e	; 62
    16c4:	29 97       	sbiw	r28, 0x09	; 9
    16c6:	0f b6       	in	r0, 0x3f	; 63
    16c8:	f8 94       	cli
    16ca:	de bf       	out	0x3e, r29	; 62
    16cc:	0f be       	out	0x3f, r0	; 63
    16ce:	cd bf       	out	0x3d, r28	; 61
    16d0:	6a 01       	movw	r12, r20
    16d2:	12 2f       	mov	r17, r18
    16d4:	b0 2e       	mov	r11, r16
    16d6:	2b e3       	ldi	r18, 0x3B	; 59
    16d8:	20 17       	cp	r18, r16
    16da:	20 f0       	brcs	.+8      	; 0x16e4 <dtoa_prf+0x3c>
    16dc:	ff 24       	eor	r15, r15
    16de:	f3 94       	inc	r15
    16e0:	f0 0e       	add	r15, r16
    16e2:	02 c0       	rjmp	.+4      	; 0x16e8 <dtoa_prf+0x40>
    16e4:	2c e3       	ldi	r18, 0x3C	; 60
    16e6:	f2 2e       	mov	r15, r18
    16e8:	0f 2d       	mov	r16, r15
    16ea:	27 e0       	ldi	r18, 0x07	; 7
    16ec:	ae 01       	movw	r20, r28
    16ee:	4f 5f       	subi	r20, 0xFF	; 255
    16f0:	5f 4f       	sbci	r21, 0xFF	; 255
    16f2:	50 d1       	rcall	.+672    	; 0x1994 <__ftoa_engine>
    16f4:	bc 01       	movw	r22, r24
    16f6:	49 81       	ldd	r20, Y+1	; 0x01
    16f8:	84 2f       	mov	r24, r20
    16fa:	89 70       	andi	r24, 0x09	; 9
    16fc:	81 30       	cpi	r24, 0x01	; 1
    16fe:	31 f0       	breq	.+12     	; 0x170c <dtoa_prf+0x64>
    1700:	e1 fc       	sbrc	r14, 1
    1702:	06 c0       	rjmp	.+12     	; 0x1710 <dtoa_prf+0x68>
    1704:	e0 fe       	sbrs	r14, 0
    1706:	06 c0       	rjmp	.+12     	; 0x1714 <dtoa_prf+0x6c>
    1708:	90 e2       	ldi	r25, 0x20	; 32
    170a:	05 c0       	rjmp	.+10     	; 0x1716 <dtoa_prf+0x6e>
    170c:	9d e2       	ldi	r25, 0x2D	; 45
    170e:	03 c0       	rjmp	.+6      	; 0x1716 <dtoa_prf+0x6e>
    1710:	9b e2       	ldi	r25, 0x2B	; 43
    1712:	01 c0       	rjmp	.+2      	; 0x1716 <dtoa_prf+0x6e>
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	5e 2d       	mov	r21, r14
    1718:	50 71       	andi	r21, 0x10	; 16
    171a:	43 ff       	sbrs	r20, 3
    171c:	3c c0       	rjmp	.+120    	; 0x1796 <dtoa_prf+0xee>
    171e:	91 11       	cpse	r25, r1
    1720:	02 c0       	rjmp	.+4      	; 0x1726 <dtoa_prf+0x7e>
    1722:	83 e0       	ldi	r24, 0x03	; 3
    1724:	01 c0       	rjmp	.+2      	; 0x1728 <dtoa_prf+0x80>
    1726:	84 e0       	ldi	r24, 0x04	; 4
    1728:	81 17       	cp	r24, r17
    172a:	18 f4       	brcc	.+6      	; 0x1732 <dtoa_prf+0x8a>
    172c:	21 2f       	mov	r18, r17
    172e:	28 1b       	sub	r18, r24
    1730:	01 c0       	rjmp	.+2      	; 0x1734 <dtoa_prf+0x8c>
    1732:	20 e0       	ldi	r18, 0x00	; 0
    1734:	51 11       	cpse	r21, r1
    1736:	0b c0       	rjmp	.+22     	; 0x174e <dtoa_prf+0xa6>
    1738:	f6 01       	movw	r30, r12
    173a:	82 2f       	mov	r24, r18
    173c:	30 e2       	ldi	r19, 0x20	; 32
    173e:	88 23       	and	r24, r24
    1740:	19 f0       	breq	.+6      	; 0x1748 <dtoa_prf+0xa0>
    1742:	31 93       	st	Z+, r19
    1744:	81 50       	subi	r24, 0x01	; 1
    1746:	fb cf       	rjmp	.-10     	; 0x173e <dtoa_prf+0x96>
    1748:	c2 0e       	add	r12, r18
    174a:	d1 1c       	adc	r13, r1
    174c:	20 e0       	ldi	r18, 0x00	; 0
    174e:	99 23       	and	r25, r25
    1750:	29 f0       	breq	.+10     	; 0x175c <dtoa_prf+0xb4>
    1752:	d6 01       	movw	r26, r12
    1754:	9c 93       	st	X, r25
    1756:	f6 01       	movw	r30, r12
    1758:	31 96       	adiw	r30, 0x01	; 1
    175a:	6f 01       	movw	r12, r30
    175c:	c6 01       	movw	r24, r12
    175e:	03 96       	adiw	r24, 0x03	; 3
    1760:	e2 fe       	sbrs	r14, 2
    1762:	0a c0       	rjmp	.+20     	; 0x1778 <dtoa_prf+0xd0>
    1764:	3e e4       	ldi	r19, 0x4E	; 78
    1766:	d6 01       	movw	r26, r12
    1768:	3c 93       	st	X, r19
    176a:	41 e4       	ldi	r20, 0x41	; 65
    176c:	11 96       	adiw	r26, 0x01	; 1
    176e:	4c 93       	st	X, r20
    1770:	11 97       	sbiw	r26, 0x01	; 1
    1772:	12 96       	adiw	r26, 0x02	; 2
    1774:	3c 93       	st	X, r19
    1776:	06 c0       	rjmp	.+12     	; 0x1784 <dtoa_prf+0xdc>
    1778:	3e e6       	ldi	r19, 0x6E	; 110
    177a:	f6 01       	movw	r30, r12
    177c:	30 83       	st	Z, r19
    177e:	41 e6       	ldi	r20, 0x61	; 97
    1780:	41 83       	std	Z+1, r20	; 0x01
    1782:	32 83       	std	Z+2, r19	; 0x02
    1784:	fc 01       	movw	r30, r24
    1786:	32 2f       	mov	r19, r18
    1788:	40 e2       	ldi	r20, 0x20	; 32
    178a:	33 23       	and	r19, r19
    178c:	09 f4       	brne	.+2      	; 0x1790 <dtoa_prf+0xe8>
    178e:	42 c0       	rjmp	.+132    	; 0x1814 <dtoa_prf+0x16c>
    1790:	41 93       	st	Z+, r20
    1792:	31 50       	subi	r19, 0x01	; 1
    1794:	fa cf       	rjmp	.-12     	; 0x178a <dtoa_prf+0xe2>
    1796:	42 ff       	sbrs	r20, 2
    1798:	44 c0       	rjmp	.+136    	; 0x1822 <dtoa_prf+0x17a>
    179a:	91 11       	cpse	r25, r1
    179c:	02 c0       	rjmp	.+4      	; 0x17a2 <dtoa_prf+0xfa>
    179e:	83 e0       	ldi	r24, 0x03	; 3
    17a0:	01 c0       	rjmp	.+2      	; 0x17a4 <dtoa_prf+0xfc>
    17a2:	84 e0       	ldi	r24, 0x04	; 4
    17a4:	81 17       	cp	r24, r17
    17a6:	18 f4       	brcc	.+6      	; 0x17ae <dtoa_prf+0x106>
    17a8:	21 2f       	mov	r18, r17
    17aa:	28 1b       	sub	r18, r24
    17ac:	01 c0       	rjmp	.+2      	; 0x17b0 <dtoa_prf+0x108>
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	51 11       	cpse	r21, r1
    17b2:	0b c0       	rjmp	.+22     	; 0x17ca <dtoa_prf+0x122>
    17b4:	f6 01       	movw	r30, r12
    17b6:	82 2f       	mov	r24, r18
    17b8:	30 e2       	ldi	r19, 0x20	; 32
    17ba:	88 23       	and	r24, r24
    17bc:	19 f0       	breq	.+6      	; 0x17c4 <dtoa_prf+0x11c>
    17be:	31 93       	st	Z+, r19
    17c0:	81 50       	subi	r24, 0x01	; 1
    17c2:	fb cf       	rjmp	.-10     	; 0x17ba <dtoa_prf+0x112>
    17c4:	c2 0e       	add	r12, r18
    17c6:	d1 1c       	adc	r13, r1
    17c8:	20 e0       	ldi	r18, 0x00	; 0
    17ca:	99 23       	and	r25, r25
    17cc:	29 f0       	breq	.+10     	; 0x17d8 <dtoa_prf+0x130>
    17ce:	d6 01       	movw	r26, r12
    17d0:	9c 93       	st	X, r25
    17d2:	f6 01       	movw	r30, r12
    17d4:	31 96       	adiw	r30, 0x01	; 1
    17d6:	6f 01       	movw	r12, r30
    17d8:	c6 01       	movw	r24, r12
    17da:	03 96       	adiw	r24, 0x03	; 3
    17dc:	e2 fe       	sbrs	r14, 2
    17de:	0b c0       	rjmp	.+22     	; 0x17f6 <dtoa_prf+0x14e>
    17e0:	39 e4       	ldi	r19, 0x49	; 73
    17e2:	d6 01       	movw	r26, r12
    17e4:	3c 93       	st	X, r19
    17e6:	3e e4       	ldi	r19, 0x4E	; 78
    17e8:	11 96       	adiw	r26, 0x01	; 1
    17ea:	3c 93       	st	X, r19
    17ec:	11 97       	sbiw	r26, 0x01	; 1
    17ee:	36 e4       	ldi	r19, 0x46	; 70
    17f0:	12 96       	adiw	r26, 0x02	; 2
    17f2:	3c 93       	st	X, r19
    17f4:	07 c0       	rjmp	.+14     	; 0x1804 <dtoa_prf+0x15c>
    17f6:	39 e6       	ldi	r19, 0x69	; 105
    17f8:	f6 01       	movw	r30, r12
    17fa:	30 83       	st	Z, r19
    17fc:	3e e6       	ldi	r19, 0x6E	; 110
    17fe:	31 83       	std	Z+1, r19	; 0x01
    1800:	36 e6       	ldi	r19, 0x66	; 102
    1802:	32 83       	std	Z+2, r19	; 0x02
    1804:	fc 01       	movw	r30, r24
    1806:	32 2f       	mov	r19, r18
    1808:	40 e2       	ldi	r20, 0x20	; 32
    180a:	33 23       	and	r19, r19
    180c:	19 f0       	breq	.+6      	; 0x1814 <dtoa_prf+0x16c>
    180e:	41 93       	st	Z+, r20
    1810:	31 50       	subi	r19, 0x01	; 1
    1812:	fb cf       	rjmp	.-10     	; 0x180a <dtoa_prf+0x162>
    1814:	fc 01       	movw	r30, r24
    1816:	e2 0f       	add	r30, r18
    1818:	f1 1d       	adc	r31, r1
    181a:	10 82       	st	Z, r1
    181c:	8e ef       	ldi	r24, 0xFE	; 254
    181e:	9f ef       	ldi	r25, 0xFF	; 255
    1820:	a6 c0       	rjmp	.+332    	; 0x196e <dtoa_prf+0x2c6>
    1822:	21 e0       	ldi	r18, 0x01	; 1
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	91 11       	cpse	r25, r1
    1828:	02 c0       	rjmp	.+4      	; 0x182e <dtoa_prf+0x186>
    182a:	20 e0       	ldi	r18, 0x00	; 0
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	16 16       	cp	r1, r22
    1830:	17 06       	cpc	r1, r23
    1832:	1c f4       	brge	.+6      	; 0x183a <dtoa_prf+0x192>
    1834:	fb 01       	movw	r30, r22
    1836:	31 96       	adiw	r30, 0x01	; 1
    1838:	02 c0       	rjmp	.+4      	; 0x183e <dtoa_prf+0x196>
    183a:	e1 e0       	ldi	r30, 0x01	; 1
    183c:	f0 e0       	ldi	r31, 0x00	; 0
    183e:	2e 0f       	add	r18, r30
    1840:	3f 1f       	adc	r19, r31
    1842:	bb 20       	and	r11, r11
    1844:	21 f0       	breq	.+8      	; 0x184e <dtoa_prf+0x1a6>
    1846:	eb 2d       	mov	r30, r11
    1848:	f0 e0       	ldi	r31, 0x00	; 0
    184a:	31 96       	adiw	r30, 0x01	; 1
    184c:	02 c0       	rjmp	.+4      	; 0x1852 <dtoa_prf+0x1aa>
    184e:	e0 e0       	ldi	r30, 0x00	; 0
    1850:	f0 e0       	ldi	r31, 0x00	; 0
    1852:	2e 0f       	add	r18, r30
    1854:	3f 1f       	adc	r19, r31
    1856:	e1 2f       	mov	r30, r17
    1858:	f0 e0       	ldi	r31, 0x00	; 0
    185a:	2e 17       	cp	r18, r30
    185c:	3f 07       	cpc	r19, r31
    185e:	1c f4       	brge	.+6      	; 0x1866 <dtoa_prf+0x1be>
    1860:	12 1b       	sub	r17, r18
    1862:	21 2f       	mov	r18, r17
    1864:	01 c0       	rjmp	.+2      	; 0x1868 <dtoa_prf+0x1c0>
    1866:	20 e0       	ldi	r18, 0x00	; 0
    1868:	8e 2d       	mov	r24, r14
    186a:	88 71       	andi	r24, 0x18	; 24
    186c:	59 f4       	brne	.+22     	; 0x1884 <dtoa_prf+0x1dc>
    186e:	f6 01       	movw	r30, r12
    1870:	82 2f       	mov	r24, r18
    1872:	30 e2       	ldi	r19, 0x20	; 32
    1874:	88 23       	and	r24, r24
    1876:	19 f0       	breq	.+6      	; 0x187e <dtoa_prf+0x1d6>
    1878:	31 93       	st	Z+, r19
    187a:	81 50       	subi	r24, 0x01	; 1
    187c:	fb cf       	rjmp	.-10     	; 0x1874 <dtoa_prf+0x1cc>
    187e:	c2 0e       	add	r12, r18
    1880:	d1 1c       	adc	r13, r1
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	99 23       	and	r25, r25
    1886:	29 f0       	breq	.+10     	; 0x1892 <dtoa_prf+0x1ea>
    1888:	d6 01       	movw	r26, r12
    188a:	9c 93       	st	X, r25
    188c:	f6 01       	movw	r30, r12
    188e:	31 96       	adiw	r30, 0x01	; 1
    1890:	6f 01       	movw	r12, r30
    1892:	51 11       	cpse	r21, r1
    1894:	0b c0       	rjmp	.+22     	; 0x18ac <dtoa_prf+0x204>
    1896:	f6 01       	movw	r30, r12
    1898:	82 2f       	mov	r24, r18
    189a:	90 e3       	ldi	r25, 0x30	; 48
    189c:	88 23       	and	r24, r24
    189e:	19 f0       	breq	.+6      	; 0x18a6 <dtoa_prf+0x1fe>
    18a0:	91 93       	st	Z+, r25
    18a2:	81 50       	subi	r24, 0x01	; 1
    18a4:	fb cf       	rjmp	.-10     	; 0x189c <dtoa_prf+0x1f4>
    18a6:	c2 0e       	add	r12, r18
    18a8:	d1 1c       	adc	r13, r1
    18aa:	20 e0       	ldi	r18, 0x00	; 0
    18ac:	0f 2d       	mov	r16, r15
    18ae:	06 0f       	add	r16, r22
    18b0:	9a 81       	ldd	r25, Y+2	; 0x02
    18b2:	34 2f       	mov	r19, r20
    18b4:	30 71       	andi	r19, 0x10	; 16
    18b6:	44 ff       	sbrs	r20, 4
    18b8:	03 c0       	rjmp	.+6      	; 0x18c0 <dtoa_prf+0x218>
    18ba:	91 33       	cpi	r25, 0x31	; 49
    18bc:	09 f4       	brne	.+2      	; 0x18c0 <dtoa_prf+0x218>
    18be:	01 50       	subi	r16, 0x01	; 1
    18c0:	10 16       	cp	r1, r16
    18c2:	24 f4       	brge	.+8      	; 0x18cc <dtoa_prf+0x224>
    18c4:	09 30       	cpi	r16, 0x09	; 9
    18c6:	18 f0       	brcs	.+6      	; 0x18ce <dtoa_prf+0x226>
    18c8:	08 e0       	ldi	r16, 0x08	; 8
    18ca:	01 c0       	rjmp	.+2      	; 0x18ce <dtoa_prf+0x226>
    18cc:	01 e0       	ldi	r16, 0x01	; 1
    18ce:	ab 01       	movw	r20, r22
    18d0:	77 ff       	sbrs	r23, 7
    18d2:	02 c0       	rjmp	.+4      	; 0x18d8 <dtoa_prf+0x230>
    18d4:	40 e0       	ldi	r20, 0x00	; 0
    18d6:	50 e0       	ldi	r21, 0x00	; 0
    18d8:	fb 01       	movw	r30, r22
    18da:	e4 1b       	sub	r30, r20
    18dc:	f5 0b       	sbc	r31, r21
    18de:	a1 e0       	ldi	r26, 0x01	; 1
    18e0:	b0 e0       	ldi	r27, 0x00	; 0
    18e2:	ac 0f       	add	r26, r28
    18e4:	bd 1f       	adc	r27, r29
    18e6:	ea 0f       	add	r30, r26
    18e8:	fb 1f       	adc	r31, r27
    18ea:	8e e2       	ldi	r24, 0x2E	; 46
    18ec:	a8 2e       	mov	r10, r24
    18ee:	4b 01       	movw	r8, r22
    18f0:	80 1a       	sub	r8, r16
    18f2:	91 08       	sbc	r9, r1
    18f4:	0b 2d       	mov	r16, r11
    18f6:	10 e0       	ldi	r17, 0x00	; 0
    18f8:	11 95       	neg	r17
    18fa:	01 95       	neg	r16
    18fc:	11 09       	sbc	r17, r1
    18fe:	4f 3f       	cpi	r20, 0xFF	; 255
    1900:	bf ef       	ldi	r27, 0xFF	; 255
    1902:	5b 07       	cpc	r21, r27
    1904:	21 f4       	brne	.+8      	; 0x190e <dtoa_prf+0x266>
    1906:	d6 01       	movw	r26, r12
    1908:	ac 92       	st	X, r10
    190a:	11 96       	adiw	r26, 0x01	; 1
    190c:	6d 01       	movw	r12, r26
    190e:	64 17       	cp	r22, r20
    1910:	75 07       	cpc	r23, r21
    1912:	2c f0       	brlt	.+10     	; 0x191e <dtoa_prf+0x276>
    1914:	84 16       	cp	r8, r20
    1916:	95 06       	cpc	r9, r21
    1918:	14 f4       	brge	.+4      	; 0x191e <dtoa_prf+0x276>
    191a:	81 81       	ldd	r24, Z+1	; 0x01
    191c:	01 c0       	rjmp	.+2      	; 0x1920 <dtoa_prf+0x278>
    191e:	80 e3       	ldi	r24, 0x30	; 48
    1920:	41 50       	subi	r20, 0x01	; 1
    1922:	51 09       	sbc	r21, r1
    1924:	31 96       	adiw	r30, 0x01	; 1
    1926:	d6 01       	movw	r26, r12
    1928:	11 96       	adiw	r26, 0x01	; 1
    192a:	7d 01       	movw	r14, r26
    192c:	40 17       	cp	r20, r16
    192e:	51 07       	cpc	r21, r17
    1930:	24 f0       	brlt	.+8      	; 0x193a <dtoa_prf+0x292>
    1932:	d6 01       	movw	r26, r12
    1934:	8c 93       	st	X, r24
    1936:	67 01       	movw	r12, r14
    1938:	e2 cf       	rjmp	.-60     	; 0x18fe <dtoa_prf+0x256>
    193a:	64 17       	cp	r22, r20
    193c:	75 07       	cpc	r23, r21
    193e:	39 f4       	brne	.+14     	; 0x194e <dtoa_prf+0x2a6>
    1940:	96 33       	cpi	r25, 0x36	; 54
    1942:	20 f4       	brcc	.+8      	; 0x194c <dtoa_prf+0x2a4>
    1944:	95 33       	cpi	r25, 0x35	; 53
    1946:	19 f4       	brne	.+6      	; 0x194e <dtoa_prf+0x2a6>
    1948:	31 11       	cpse	r19, r1
    194a:	01 c0       	rjmp	.+2      	; 0x194e <dtoa_prf+0x2a6>
    194c:	81 e3       	ldi	r24, 0x31	; 49
    194e:	f6 01       	movw	r30, r12
    1950:	80 83       	st	Z, r24
    1952:	f7 01       	movw	r30, r14
    1954:	82 2f       	mov	r24, r18
    1956:	90 e2       	ldi	r25, 0x20	; 32
    1958:	88 23       	and	r24, r24
    195a:	19 f0       	breq	.+6      	; 0x1962 <dtoa_prf+0x2ba>
    195c:	91 93       	st	Z+, r25
    195e:	81 50       	subi	r24, 0x01	; 1
    1960:	fb cf       	rjmp	.-10     	; 0x1958 <dtoa_prf+0x2b0>
    1962:	f7 01       	movw	r30, r14
    1964:	e2 0f       	add	r30, r18
    1966:	f1 1d       	adc	r31, r1
    1968:	10 82       	st	Z, r1
    196a:	80 e0       	ldi	r24, 0x00	; 0
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	29 96       	adiw	r28, 0x09	; 9
    1970:	0f b6       	in	r0, 0x3f	; 63
    1972:	f8 94       	cli
    1974:	de bf       	out	0x3e, r29	; 62
    1976:	0f be       	out	0x3f, r0	; 63
    1978:	cd bf       	out	0x3d, r28	; 61
    197a:	df 91       	pop	r29
    197c:	cf 91       	pop	r28
    197e:	1f 91       	pop	r17
    1980:	0f 91       	pop	r16
    1982:	ff 90       	pop	r15
    1984:	ef 90       	pop	r14
    1986:	df 90       	pop	r13
    1988:	cf 90       	pop	r12
    198a:	bf 90       	pop	r11
    198c:	af 90       	pop	r10
    198e:	9f 90       	pop	r9
    1990:	8f 90       	pop	r8
    1992:	08 95       	ret

00001994 <__ftoa_engine>:
    1994:	28 30       	cpi	r18, 0x08	; 8
    1996:	08 f0       	brcs	.+2      	; 0x199a <__ftoa_engine+0x6>
    1998:	27 e0       	ldi	r18, 0x07	; 7
    199a:	33 27       	eor	r19, r19
    199c:	da 01       	movw	r26, r20
    199e:	99 0f       	add	r25, r25
    19a0:	31 1d       	adc	r19, r1
    19a2:	87 fd       	sbrc	r24, 7
    19a4:	91 60       	ori	r25, 0x01	; 1
    19a6:	00 96       	adiw	r24, 0x00	; 0
    19a8:	61 05       	cpc	r22, r1
    19aa:	71 05       	cpc	r23, r1
    19ac:	39 f4       	brne	.+14     	; 0x19bc <__ftoa_engine+0x28>
    19ae:	32 60       	ori	r19, 0x02	; 2
    19b0:	2e 5f       	subi	r18, 0xFE	; 254
    19b2:	3d 93       	st	X+, r19
    19b4:	30 e3       	ldi	r19, 0x30	; 48
    19b6:	2a 95       	dec	r18
    19b8:	e1 f7       	brne	.-8      	; 0x19b2 <__ftoa_engine+0x1e>
    19ba:	08 95       	ret
    19bc:	9f 3f       	cpi	r25, 0xFF	; 255
    19be:	30 f0       	brcs	.+12     	; 0x19cc <__ftoa_engine+0x38>
    19c0:	80 38       	cpi	r24, 0x80	; 128
    19c2:	71 05       	cpc	r23, r1
    19c4:	61 05       	cpc	r22, r1
    19c6:	09 f0       	breq	.+2      	; 0x19ca <__ftoa_engine+0x36>
    19c8:	3c 5f       	subi	r19, 0xFC	; 252
    19ca:	3c 5f       	subi	r19, 0xFC	; 252
    19cc:	3d 93       	st	X+, r19
    19ce:	91 30       	cpi	r25, 0x01	; 1
    19d0:	08 f0       	brcs	.+2      	; 0x19d4 <__ftoa_engine+0x40>
    19d2:	80 68       	ori	r24, 0x80	; 128
    19d4:	91 1d       	adc	r25, r1
    19d6:	df 93       	push	r29
    19d8:	cf 93       	push	r28
    19da:	1f 93       	push	r17
    19dc:	0f 93       	push	r16
    19de:	ff 92       	push	r15
    19e0:	ef 92       	push	r14
    19e2:	19 2f       	mov	r17, r25
    19e4:	98 7f       	andi	r25, 0xF8	; 248
    19e6:	96 95       	lsr	r25
    19e8:	e9 2f       	mov	r30, r25
    19ea:	96 95       	lsr	r25
    19ec:	96 95       	lsr	r25
    19ee:	e9 0f       	add	r30, r25
    19f0:	ff 27       	eor	r31, r31
    19f2:	e4 59       	subi	r30, 0x94	; 148
    19f4:	fe 4f       	sbci	r31, 0xFE	; 254
    19f6:	99 27       	eor	r25, r25
    19f8:	33 27       	eor	r19, r19
    19fa:	ee 24       	eor	r14, r14
    19fc:	ff 24       	eor	r15, r15
    19fe:	a7 01       	movw	r20, r14
    1a00:	e7 01       	movw	r28, r14
    1a02:	05 90       	lpm	r0, Z+
    1a04:	08 94       	sec
    1a06:	07 94       	ror	r0
    1a08:	28 f4       	brcc	.+10     	; 0x1a14 <__ftoa_engine+0x80>
    1a0a:	36 0f       	add	r19, r22
    1a0c:	e7 1e       	adc	r14, r23
    1a0e:	f8 1e       	adc	r15, r24
    1a10:	49 1f       	adc	r20, r25
    1a12:	51 1d       	adc	r21, r1
    1a14:	66 0f       	add	r22, r22
    1a16:	77 1f       	adc	r23, r23
    1a18:	88 1f       	adc	r24, r24
    1a1a:	99 1f       	adc	r25, r25
    1a1c:	06 94       	lsr	r0
    1a1e:	a1 f7       	brne	.-24     	; 0x1a08 <__ftoa_engine+0x74>
    1a20:	05 90       	lpm	r0, Z+
    1a22:	07 94       	ror	r0
    1a24:	28 f4       	brcc	.+10     	; 0x1a30 <__ftoa_engine+0x9c>
    1a26:	e7 0e       	add	r14, r23
    1a28:	f8 1e       	adc	r15, r24
    1a2a:	49 1f       	adc	r20, r25
    1a2c:	56 1f       	adc	r21, r22
    1a2e:	c1 1d       	adc	r28, r1
    1a30:	77 0f       	add	r23, r23
    1a32:	88 1f       	adc	r24, r24
    1a34:	99 1f       	adc	r25, r25
    1a36:	66 1f       	adc	r22, r22
    1a38:	06 94       	lsr	r0
    1a3a:	a1 f7       	brne	.-24     	; 0x1a24 <__ftoa_engine+0x90>
    1a3c:	05 90       	lpm	r0, Z+
    1a3e:	07 94       	ror	r0
    1a40:	28 f4       	brcc	.+10     	; 0x1a4c <__ftoa_engine+0xb8>
    1a42:	f8 0e       	add	r15, r24
    1a44:	49 1f       	adc	r20, r25
    1a46:	56 1f       	adc	r21, r22
    1a48:	c7 1f       	adc	r28, r23
    1a4a:	d1 1d       	adc	r29, r1
    1a4c:	88 0f       	add	r24, r24
    1a4e:	99 1f       	adc	r25, r25
    1a50:	66 1f       	adc	r22, r22
    1a52:	77 1f       	adc	r23, r23
    1a54:	06 94       	lsr	r0
    1a56:	a1 f7       	brne	.-24     	; 0x1a40 <__ftoa_engine+0xac>
    1a58:	05 90       	lpm	r0, Z+
    1a5a:	07 94       	ror	r0
    1a5c:	20 f4       	brcc	.+8      	; 0x1a66 <__ftoa_engine+0xd2>
    1a5e:	49 0f       	add	r20, r25
    1a60:	56 1f       	adc	r21, r22
    1a62:	c7 1f       	adc	r28, r23
    1a64:	d8 1f       	adc	r29, r24
    1a66:	99 0f       	add	r25, r25
    1a68:	66 1f       	adc	r22, r22
    1a6a:	77 1f       	adc	r23, r23
    1a6c:	88 1f       	adc	r24, r24
    1a6e:	06 94       	lsr	r0
    1a70:	a9 f7       	brne	.-22     	; 0x1a5c <__ftoa_engine+0xc8>
    1a72:	84 91       	lpm	r24, Z
    1a74:	10 95       	com	r17
    1a76:	17 70       	andi	r17, 0x07	; 7
    1a78:	41 f0       	breq	.+16     	; 0x1a8a <__ftoa_engine+0xf6>
    1a7a:	d6 95       	lsr	r29
    1a7c:	c7 95       	ror	r28
    1a7e:	57 95       	ror	r21
    1a80:	47 95       	ror	r20
    1a82:	f7 94       	ror	r15
    1a84:	e7 94       	ror	r14
    1a86:	1a 95       	dec	r17
    1a88:	c1 f7       	brne	.-16     	; 0x1a7a <__ftoa_engine+0xe6>
    1a8a:	e2 e1       	ldi	r30, 0x12	; 18
    1a8c:	f1 e0       	ldi	r31, 0x01	; 1
    1a8e:	68 94       	set
    1a90:	15 90       	lpm	r1, Z+
    1a92:	15 91       	lpm	r17, Z+
    1a94:	35 91       	lpm	r19, Z+
    1a96:	65 91       	lpm	r22, Z+
    1a98:	95 91       	lpm	r25, Z+
    1a9a:	05 90       	lpm	r0, Z+
    1a9c:	7f e2       	ldi	r23, 0x2F	; 47
    1a9e:	73 95       	inc	r23
    1aa0:	e1 18       	sub	r14, r1
    1aa2:	f1 0a       	sbc	r15, r17
    1aa4:	43 0b       	sbc	r20, r19
    1aa6:	56 0b       	sbc	r21, r22
    1aa8:	c9 0b       	sbc	r28, r25
    1aaa:	d0 09       	sbc	r29, r0
    1aac:	c0 f7       	brcc	.-16     	; 0x1a9e <__ftoa_engine+0x10a>
    1aae:	e1 0c       	add	r14, r1
    1ab0:	f1 1e       	adc	r15, r17
    1ab2:	43 1f       	adc	r20, r19
    1ab4:	56 1f       	adc	r21, r22
    1ab6:	c9 1f       	adc	r28, r25
    1ab8:	d0 1d       	adc	r29, r0
    1aba:	7e f4       	brtc	.+30     	; 0x1ada <__ftoa_engine+0x146>
    1abc:	70 33       	cpi	r23, 0x30	; 48
    1abe:	11 f4       	brne	.+4      	; 0x1ac4 <__ftoa_engine+0x130>
    1ac0:	8a 95       	dec	r24
    1ac2:	e6 cf       	rjmp	.-52     	; 0x1a90 <__ftoa_engine+0xfc>
    1ac4:	e8 94       	clt
    1ac6:	01 50       	subi	r16, 0x01	; 1
    1ac8:	30 f0       	brcs	.+12     	; 0x1ad6 <__ftoa_engine+0x142>
    1aca:	08 0f       	add	r16, r24
    1acc:	0a f4       	brpl	.+2      	; 0x1ad0 <__ftoa_engine+0x13c>
    1ace:	00 27       	eor	r16, r16
    1ad0:	02 17       	cp	r16, r18
    1ad2:	08 f4       	brcc	.+2      	; 0x1ad6 <__ftoa_engine+0x142>
    1ad4:	20 2f       	mov	r18, r16
    1ad6:	23 95       	inc	r18
    1ad8:	02 2f       	mov	r16, r18
    1ada:	7a 33       	cpi	r23, 0x3A	; 58
    1adc:	28 f0       	brcs	.+10     	; 0x1ae8 <__ftoa_engine+0x154>
    1ade:	79 e3       	ldi	r23, 0x39	; 57
    1ae0:	7d 93       	st	X+, r23
    1ae2:	2a 95       	dec	r18
    1ae4:	e9 f7       	brne	.-6      	; 0x1ae0 <__ftoa_engine+0x14c>
    1ae6:	10 c0       	rjmp	.+32     	; 0x1b08 <__ftoa_engine+0x174>
    1ae8:	7d 93       	st	X+, r23
    1aea:	2a 95       	dec	r18
    1aec:	89 f6       	brne	.-94     	; 0x1a90 <__ftoa_engine+0xfc>
    1aee:	06 94       	lsr	r0
    1af0:	97 95       	ror	r25
    1af2:	67 95       	ror	r22
    1af4:	37 95       	ror	r19
    1af6:	17 95       	ror	r17
    1af8:	17 94       	ror	r1
    1afa:	e1 18       	sub	r14, r1
    1afc:	f1 0a       	sbc	r15, r17
    1afe:	43 0b       	sbc	r20, r19
    1b00:	56 0b       	sbc	r21, r22
    1b02:	c9 0b       	sbc	r28, r25
    1b04:	d0 09       	sbc	r29, r0
    1b06:	98 f0       	brcs	.+38     	; 0x1b2e <__ftoa_engine+0x19a>
    1b08:	23 95       	inc	r18
    1b0a:	7e 91       	ld	r23, -X
    1b0c:	73 95       	inc	r23
    1b0e:	7a 33       	cpi	r23, 0x3A	; 58
    1b10:	08 f0       	brcs	.+2      	; 0x1b14 <__ftoa_engine+0x180>
    1b12:	70 e3       	ldi	r23, 0x30	; 48
    1b14:	7c 93       	st	X, r23
    1b16:	20 13       	cpse	r18, r16
    1b18:	b8 f7       	brcc	.-18     	; 0x1b08 <__ftoa_engine+0x174>
    1b1a:	7e 91       	ld	r23, -X
    1b1c:	70 61       	ori	r23, 0x10	; 16
    1b1e:	7d 93       	st	X+, r23
    1b20:	30 f0       	brcs	.+12     	; 0x1b2e <__ftoa_engine+0x19a>
    1b22:	83 95       	inc	r24
    1b24:	71 e3       	ldi	r23, 0x31	; 49
    1b26:	7d 93       	st	X+, r23
    1b28:	70 e3       	ldi	r23, 0x30	; 48
    1b2a:	2a 95       	dec	r18
    1b2c:	e1 f7       	brne	.-8      	; 0x1b26 <__ftoa_engine+0x192>
    1b2e:	11 24       	eor	r1, r1
    1b30:	ef 90       	pop	r14
    1b32:	ff 90       	pop	r15
    1b34:	0f 91       	pop	r16
    1b36:	1f 91       	pop	r17
    1b38:	cf 91       	pop	r28
    1b3a:	df 91       	pop	r29
    1b3c:	99 27       	eor	r25, r25
    1b3e:	87 fd       	sbrc	r24, 7
    1b40:	90 95       	com	r25
    1b42:	08 95       	ret

00001b44 <_exit>:
    1b44:	f8 94       	cli

00001b46 <__stop_program>:
    1b46:	ff cf       	rjmp	.-2      	; 0x1b46 <__stop_program>
